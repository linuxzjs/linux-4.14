/* Generated by ./xlat/gen.sh from ./xlat/fspick_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(FSPICK_CLOEXEC) || (defined(HAVE_DECL_FSPICK_CLOEXEC) && HAVE_DECL_FSPICK_CLOEXEC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FSPICK_CLOEXEC) == (0x01), "FSPICK_CLOEXEC != 0x01");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FSPICK_CLOEXEC 0x01
#endif
#if defined(FSPICK_SYMLINK_NOFOLLOW) || (defined(HAVE_DECL_FSPICK_SYMLINK_NOFOLLOW) && HAVE_DECL_FSPICK_SYMLINK_NOFOLLOW)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FSPICK_SYMLINK_NOFOLLOW) == (0x02), "FSPICK_SYMLINK_NOFOLLOW != 0x02");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FSPICK_SYMLINK_NOFOLLOW 0x02
#endif
#if defined(FSPICK_NO_AUTOMOUNT) || (defined(HAVE_DECL_FSPICK_NO_AUTOMOUNT) && HAVE_DECL_FSPICK_NO_AUTOMOUNT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FSPICK_NO_AUTOMOUNT) == (0x04), "FSPICK_NO_AUTOMOUNT != 0x04");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FSPICK_NO_AUTOMOUNT 0x04
#endif
#if defined(FSPICK_EMPTY_PATH) || (defined(HAVE_DECL_FSPICK_EMPTY_PATH) && HAVE_DECL_FSPICK_EMPTY_PATH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((FSPICK_EMPTY_PATH) == (0x08), "FSPICK_EMPTY_PATH != 0x08");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define FSPICK_EMPTY_PATH 0x08
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat fspick_flags in mpers mode

# else

static const struct xlat_data fspick_flags_xdata[] = {
 XLAT(FSPICK_CLOEXEC),
 #define XLAT_VAL_0 ((unsigned) (FSPICK_CLOEXEC))
 #define XLAT_STR_0 STRINGIFY(FSPICK_CLOEXEC)
 XLAT(FSPICK_SYMLINK_NOFOLLOW),
 #define XLAT_VAL_1 ((unsigned) (FSPICK_SYMLINK_NOFOLLOW))
 #define XLAT_STR_1 STRINGIFY(FSPICK_SYMLINK_NOFOLLOW)
 XLAT(FSPICK_NO_AUTOMOUNT),
 #define XLAT_VAL_2 ((unsigned) (FSPICK_NO_AUTOMOUNT))
 #define XLAT_STR_2 STRINGIFY(FSPICK_NO_AUTOMOUNT)
 XLAT(FSPICK_EMPTY_PATH),
 #define XLAT_VAL_3 ((unsigned) (FSPICK_EMPTY_PATH))
 #define XLAT_STR_3 STRINGIFY(FSPICK_EMPTY_PATH)
};
static
const struct xlat fspick_flags[1] = { {
 .data = fspick_flags_xdata,
 .size = ARRAY_SIZE(fspick_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
