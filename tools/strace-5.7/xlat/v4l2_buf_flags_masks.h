/* Generated by ./xlat/gen.sh from ./xlat/v4l2_buf_flags_masks.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(V4L2_BUF_FLAG_TIMESTAMP_MASK) || (defined(HAVE_DECL_V4L2_BUF_FLAG_TIMESTAMP_MASK) && HAVE_DECL_V4L2_BUF_FLAG_TIMESTAMP_MASK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_BUF_FLAG_TIMESTAMP_MASK) == (0x0000e000), "V4L2_BUF_FLAG_TIMESTAMP_MASK != 0x0000e000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_BUF_FLAG_TIMESTAMP_MASK 0x0000e000
#endif
#if defined(V4L2_BUF_FLAG_TSTAMP_SRC_MASK) || (defined(HAVE_DECL_V4L2_BUF_FLAG_TSTAMP_SRC_MASK) && HAVE_DECL_V4L2_BUF_FLAG_TSTAMP_SRC_MASK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_BUF_FLAG_TSTAMP_SRC_MASK) == (0x00070000), "V4L2_BUF_FLAG_TSTAMP_SRC_MASK != 0x00070000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_BUF_FLAG_TSTAMP_SRC_MASK 0x00070000
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_buf_flags_masks[];

# else

static const struct xlat_data v4l2_buf_flags_masks_xdata[] = {
 XLAT(V4L2_BUF_FLAG_TIMESTAMP_MASK),
 #define XLAT_VAL_0 ((unsigned) (V4L2_BUF_FLAG_TIMESTAMP_MASK))
 #define XLAT_STR_0 STRINGIFY(V4L2_BUF_FLAG_TIMESTAMP_MASK)
 XLAT(V4L2_BUF_FLAG_TSTAMP_SRC_MASK),
 #define XLAT_VAL_1 ((unsigned) (V4L2_BUF_FLAG_TSTAMP_SRC_MASK))
 #define XLAT_STR_1 STRINGIFY(V4L2_BUF_FLAG_TSTAMP_SRC_MASK)
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_buf_flags_masks[1] = { {
 .data = v4l2_buf_flags_masks_xdata,
 .size = ARRAY_SIZE(v4l2_buf_flags_masks_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
