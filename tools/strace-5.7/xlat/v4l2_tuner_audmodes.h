/* Generated by ./xlat/gen.sh from ./xlat/v4l2_tuner_audmodes.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(V4L2_TUNER_MODE_MONO) || (defined(HAVE_DECL_V4L2_TUNER_MODE_MONO) && HAVE_DECL_V4L2_TUNER_MODE_MONO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_MODE_MONO) == (0x0000), "V4L2_TUNER_MODE_MONO != 0x0000");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_MODE_MONO 0x0000
#endif
#if defined(V4L2_TUNER_MODE_STEREO) || (defined(HAVE_DECL_V4L2_TUNER_MODE_STEREO) && HAVE_DECL_V4L2_TUNER_MODE_STEREO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_MODE_STEREO) == (0x0001), "V4L2_TUNER_MODE_STEREO != 0x0001");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_MODE_STEREO 0x0001
#endif
#if defined(V4L2_TUNER_MODE_LANG2) || (defined(HAVE_DECL_V4L2_TUNER_MODE_LANG2) && HAVE_DECL_V4L2_TUNER_MODE_LANG2)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_MODE_LANG2) == (0x0002), "V4L2_TUNER_MODE_LANG2 != 0x0002");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_MODE_LANG2 0x0002
#endif
#if defined(V4L2_TUNER_MODE_LANG1) || (defined(HAVE_DECL_V4L2_TUNER_MODE_LANG1) && HAVE_DECL_V4L2_TUNER_MODE_LANG1)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_MODE_LANG1) == (0x0003), "V4L2_TUNER_MODE_LANG1 != 0x0003");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_MODE_LANG1 0x0003
#endif
#if defined(V4L2_TUNER_MODE_LANG1_LANG2) || (defined(HAVE_DECL_V4L2_TUNER_MODE_LANG1_LANG2) && HAVE_DECL_V4L2_TUNER_MODE_LANG1_LANG2)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((V4L2_TUNER_MODE_LANG1_LANG2) == (0x0004), "V4L2_TUNER_MODE_LANG1_LANG2 != 0x0004");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define V4L2_TUNER_MODE_LANG1_LANG2 0x0004
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

extern const struct xlat v4l2_tuner_audmodes[];

# else

static const struct xlat_data v4l2_tuner_audmodes_xdata[] = {
 [V4L2_TUNER_MODE_MONO] = XLAT(V4L2_TUNER_MODE_MONO),
 #define XLAT_VAL_0 ((unsigned) (V4L2_TUNER_MODE_MONO))
 #define XLAT_STR_0 STRINGIFY(V4L2_TUNER_MODE_MONO)
 [V4L2_TUNER_MODE_STEREO] = XLAT(V4L2_TUNER_MODE_STEREO),
 #define XLAT_VAL_1 ((unsigned) (V4L2_TUNER_MODE_STEREO))
 #define XLAT_STR_1 STRINGIFY(V4L2_TUNER_MODE_STEREO)
 [V4L2_TUNER_MODE_LANG2] = XLAT(V4L2_TUNER_MODE_LANG2),
 #define XLAT_VAL_2 ((unsigned) (V4L2_TUNER_MODE_LANG2))
 #define XLAT_STR_2 STRINGIFY(V4L2_TUNER_MODE_LANG2)

 [V4L2_TUNER_MODE_LANG1] = XLAT(V4L2_TUNER_MODE_LANG1),
 #define XLAT_VAL_3 ((unsigned) (V4L2_TUNER_MODE_LANG1))
 #define XLAT_STR_3 STRINGIFY(V4L2_TUNER_MODE_LANG1)
 [V4L2_TUNER_MODE_LANG1_LANG2] = XLAT(V4L2_TUNER_MODE_LANG1_LANG2),
 #define XLAT_VAL_4 ((unsigned) (V4L2_TUNER_MODE_LANG1_LANG2))
 #define XLAT_STR_4 STRINGIFY(V4L2_TUNER_MODE_LANG1_LANG2)
};
#  if !(defined HAVE_M32_MPERS || defined HAVE_MX32_MPERS)
static
#  endif
const struct xlat v4l2_tuner_audmodes[1] = { {
 .data = v4l2_tuner_audmodes_xdata,
 .size = ARRAY_SIZE(v4l2_tuner_audmodes_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
