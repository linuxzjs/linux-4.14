/* Generated by ./xlat/gen.sh from ./xlat/access_flags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat access_flags in mpers mode

# else

static const struct xlat_data access_flags_xdata[] = {
#if defined(F_OK) || (defined(HAVE_DECL_F_OK) && HAVE_DECL_F_OK)
  XLAT(F_OK),
 #define XLAT_VAL_0 ((unsigned) (F_OK))
 #define XLAT_STR_0 STRINGIFY(F_OK)
#endif
#if defined(R_OK) || (defined(HAVE_DECL_R_OK) && HAVE_DECL_R_OK)
  XLAT(R_OK),
 #define XLAT_VAL_1 ((unsigned) (R_OK))
 #define XLAT_STR_1 STRINGIFY(R_OK)
#endif
#if defined(W_OK) || (defined(HAVE_DECL_W_OK) && HAVE_DECL_W_OK)
  XLAT(W_OK),
 #define XLAT_VAL_2 ((unsigned) (W_OK))
 #define XLAT_STR_2 STRINGIFY(W_OK)
#endif
#if defined(X_OK) || (defined(HAVE_DECL_X_OK) && HAVE_DECL_X_OK)
  XLAT(X_OK),
 #define XLAT_VAL_3 ((unsigned) (X_OK))
 #define XLAT_STR_3 STRINGIFY(X_OK)
#endif
#if defined(EFF_ONLY_OK) || (defined(HAVE_DECL_EFF_ONLY_OK) && HAVE_DECL_EFF_ONLY_OK)
  XLAT(EFF_ONLY_OK),
 #define XLAT_VAL_4 ((unsigned) (EFF_ONLY_OK))
 #define XLAT_STR_4 STRINGIFY(EFF_ONLY_OK)
#endif
#if defined(EX_OK) || (defined(HAVE_DECL_EX_OK) && HAVE_DECL_EX_OK)
  XLAT(EX_OK),
 #define XLAT_VAL_5 ((unsigned) (EX_OK))
 #define XLAT_STR_5 STRINGIFY(EX_OK)
#endif
};
static
const struct xlat access_flags[1] = { {
 .data = access_flags_xdata,
 .size = ARRAY_SIZE(access_flags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
