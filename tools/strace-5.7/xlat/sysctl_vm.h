/* Generated by ./xlat/gen.sh from ./xlat/sysctl_vm.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat sysctl_vm in mpers mode

# else

static const struct xlat_data sysctl_vm_xdata[] = {
 XLAT(VM_OVERCOMMIT_MEMORY),
 #define XLAT_VAL_0 ((unsigned) (VM_OVERCOMMIT_MEMORY))
 #define XLAT_STR_0 STRINGIFY(VM_OVERCOMMIT_MEMORY)
 XLAT(VM_PAGE_CLUSTER),
 #define XLAT_VAL_1 ((unsigned) (VM_PAGE_CLUSTER))
 #define XLAT_STR_1 STRINGIFY(VM_PAGE_CLUSTER)
 XLAT(VM_DIRTY_BACKGROUND),
 #define XLAT_VAL_2 ((unsigned) (VM_DIRTY_BACKGROUND))
 #define XLAT_STR_2 STRINGIFY(VM_DIRTY_BACKGROUND)
 XLAT(VM_DIRTY_RATIO),
 #define XLAT_VAL_3 ((unsigned) (VM_DIRTY_RATIO))
 #define XLAT_STR_3 STRINGIFY(VM_DIRTY_RATIO)
 XLAT(VM_DIRTY_WB_CS),
 #define XLAT_VAL_4 ((unsigned) (VM_DIRTY_WB_CS))
 #define XLAT_STR_4 STRINGIFY(VM_DIRTY_WB_CS)
 XLAT(VM_DIRTY_EXPIRE_CS),
 #define XLAT_VAL_5 ((unsigned) (VM_DIRTY_EXPIRE_CS))
 #define XLAT_STR_5 STRINGIFY(VM_DIRTY_EXPIRE_CS)
 XLAT(VM_NR_PDFLUSH_THREADS),
 #define XLAT_VAL_6 ((unsigned) (VM_NR_PDFLUSH_THREADS))
 #define XLAT_STR_6 STRINGIFY(VM_NR_PDFLUSH_THREADS)
 XLAT(VM_OVERCOMMIT_RATIO),
 #define XLAT_VAL_7 ((unsigned) (VM_OVERCOMMIT_RATIO))
 #define XLAT_STR_7 STRINGIFY(VM_OVERCOMMIT_RATIO)
 XLAT(VM_PAGEBUF),
 #define XLAT_VAL_8 ((unsigned) (VM_PAGEBUF))
 #define XLAT_STR_8 STRINGIFY(VM_PAGEBUF)
 XLAT(VM_HUGETLB_PAGES),
 #define XLAT_VAL_9 ((unsigned) (VM_HUGETLB_PAGES))
 #define XLAT_STR_9 STRINGIFY(VM_HUGETLB_PAGES)
 XLAT(VM_SWAPPINESS),
 #define XLAT_VAL_10 ((unsigned) (VM_SWAPPINESS))
 #define XLAT_STR_10 STRINGIFY(VM_SWAPPINESS)
 XLAT(VM_LOWMEM_RESERVE_RATIO),
 #define XLAT_VAL_11 ((unsigned) (VM_LOWMEM_RESERVE_RATIO))
 #define XLAT_STR_11 STRINGIFY(VM_LOWMEM_RESERVE_RATIO)
 XLAT(VM_MIN_FREE_KBYTES),
 #define XLAT_VAL_12 ((unsigned) (VM_MIN_FREE_KBYTES))
 #define XLAT_STR_12 STRINGIFY(VM_MIN_FREE_KBYTES)
#if defined(VM_MAX_MAP_COUNT) || (defined(HAVE_DECL_VM_MAX_MAP_COUNT) && HAVE_DECL_VM_MAX_MAP_COUNT)
  XLAT(VM_MAX_MAP_COUNT),
 #define XLAT_VAL_13 ((unsigned) (VM_MAX_MAP_COUNT))
 #define XLAT_STR_13 STRINGIFY(VM_MAX_MAP_COUNT)
#endif
#if defined(VM_LAPTOP_MODE) || (defined(HAVE_DECL_VM_LAPTOP_MODE) && HAVE_DECL_VM_LAPTOP_MODE)
  XLAT(VM_LAPTOP_MODE),
 #define XLAT_VAL_14 ((unsigned) (VM_LAPTOP_MODE))
 #define XLAT_STR_14 STRINGIFY(VM_LAPTOP_MODE)
#endif
#if defined(VM_BLOCK_DUMP) || (defined(HAVE_DECL_VM_BLOCK_DUMP) && HAVE_DECL_VM_BLOCK_DUMP)
  XLAT(VM_BLOCK_DUMP),
 #define XLAT_VAL_15 ((unsigned) (VM_BLOCK_DUMP))
 #define XLAT_STR_15 STRINGIFY(VM_BLOCK_DUMP)
#endif
#if defined(VM_HUGETLB_GROUP) || (defined(HAVE_DECL_VM_HUGETLB_GROUP) && HAVE_DECL_VM_HUGETLB_GROUP)
  XLAT(VM_HUGETLB_GROUP),
 #define XLAT_VAL_16 ((unsigned) (VM_HUGETLB_GROUP))
 #define XLAT_STR_16 STRINGIFY(VM_HUGETLB_GROUP)
#endif
#if defined(VM_VFS_CACHE_PRESSURE) || (defined(HAVE_DECL_VM_VFS_CACHE_PRESSURE) && HAVE_DECL_VM_VFS_CACHE_PRESSURE)
  XLAT(VM_VFS_CACHE_PRESSURE),
 #define XLAT_VAL_17 ((unsigned) (VM_VFS_CACHE_PRESSURE))
 #define XLAT_STR_17 STRINGIFY(VM_VFS_CACHE_PRESSURE)
#endif
#if defined(VM_LEGACY_VA_LAYOUT) || (defined(HAVE_DECL_VM_LEGACY_VA_LAYOUT) && HAVE_DECL_VM_LEGACY_VA_LAYOUT)
  XLAT(VM_LEGACY_VA_LAYOUT),
 #define XLAT_VAL_18 ((unsigned) (VM_LEGACY_VA_LAYOUT))
 #define XLAT_STR_18 STRINGIFY(VM_LEGACY_VA_LAYOUT)
#endif
#if defined(VM_SWAP_TOKEN_TIMEOUT) || (defined(HAVE_DECL_VM_SWAP_TOKEN_TIMEOUT) && HAVE_DECL_VM_SWAP_TOKEN_TIMEOUT)
  XLAT(VM_SWAP_TOKEN_TIMEOUT),
 #define XLAT_VAL_19 ((unsigned) (VM_SWAP_TOKEN_TIMEOUT))
 #define XLAT_STR_19 STRINGIFY(VM_SWAP_TOKEN_TIMEOUT)
#endif
};
static
const struct xlat sysctl_vm[1] = { {
 .data = sysctl_vm_xdata,
 .size = ARRAY_SIZE(sysctl_vm_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
