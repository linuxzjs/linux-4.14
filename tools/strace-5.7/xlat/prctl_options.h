/* Generated by ./xlat/gen.sh from ./xlat/prctl_options.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(PR_SET_PDEATHSIG) || (defined(HAVE_DECL_PR_SET_PDEATHSIG) && HAVE_DECL_PR_SET_PDEATHSIG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_PDEATHSIG) == (1), "PR_SET_PDEATHSIG != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_PDEATHSIG 1
#endif
#if defined(PR_GET_PDEATHSIG) || (defined(HAVE_DECL_PR_GET_PDEATHSIG) && HAVE_DECL_PR_GET_PDEATHSIG)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_PDEATHSIG) == (2), "PR_GET_PDEATHSIG != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_PDEATHSIG 2
#endif
#if defined(PR_GET_DUMPABLE) || (defined(HAVE_DECL_PR_GET_DUMPABLE) && HAVE_DECL_PR_GET_DUMPABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_DUMPABLE) == (3), "PR_GET_DUMPABLE != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_DUMPABLE 3
#endif
#if defined(PR_SET_DUMPABLE) || (defined(HAVE_DECL_PR_SET_DUMPABLE) && HAVE_DECL_PR_SET_DUMPABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_DUMPABLE) == (4), "PR_SET_DUMPABLE != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_DUMPABLE 4
#endif
#if defined(PR_GET_UNALIGN) || (defined(HAVE_DECL_PR_GET_UNALIGN) && HAVE_DECL_PR_GET_UNALIGN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_UNALIGN) == (5), "PR_GET_UNALIGN != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_UNALIGN 5
#endif
#if defined(PR_SET_UNALIGN) || (defined(HAVE_DECL_PR_SET_UNALIGN) && HAVE_DECL_PR_SET_UNALIGN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_UNALIGN) == (6), "PR_SET_UNALIGN != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_UNALIGN 6
#endif
#if defined(PR_GET_KEEPCAPS) || (defined(HAVE_DECL_PR_GET_KEEPCAPS) && HAVE_DECL_PR_GET_KEEPCAPS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_KEEPCAPS) == (7), "PR_GET_KEEPCAPS != 7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_KEEPCAPS 7
#endif
#if defined(PR_SET_KEEPCAPS) || (defined(HAVE_DECL_PR_SET_KEEPCAPS) && HAVE_DECL_PR_SET_KEEPCAPS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_KEEPCAPS) == (8), "PR_SET_KEEPCAPS != 8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_KEEPCAPS 8
#endif
#if defined(PR_GET_FPEMU) || (defined(HAVE_DECL_PR_GET_FPEMU) && HAVE_DECL_PR_GET_FPEMU)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_FPEMU) == (9), "PR_GET_FPEMU != 9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_FPEMU 9
#endif
#if defined(PR_SET_FPEMU) || (defined(HAVE_DECL_PR_SET_FPEMU) && HAVE_DECL_PR_SET_FPEMU)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_FPEMU) == (10), "PR_SET_FPEMU != 10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_FPEMU 10
#endif
#if defined(PR_GET_FPEXC) || (defined(HAVE_DECL_PR_GET_FPEXC) && HAVE_DECL_PR_GET_FPEXC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_FPEXC) == (11), "PR_GET_FPEXC != 11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_FPEXC 11
#endif
#if defined(PR_SET_FPEXC) || (defined(HAVE_DECL_PR_SET_FPEXC) && HAVE_DECL_PR_SET_FPEXC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_FPEXC) == (12), "PR_SET_FPEXC != 12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_FPEXC 12
#endif
#if defined(PR_GET_TIMING) || (defined(HAVE_DECL_PR_GET_TIMING) && HAVE_DECL_PR_GET_TIMING)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_TIMING) == (13), "PR_GET_TIMING != 13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_TIMING 13
#endif
#if defined(PR_SET_TIMING) || (defined(HAVE_DECL_PR_SET_TIMING) && HAVE_DECL_PR_SET_TIMING)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_TIMING) == (14), "PR_SET_TIMING != 14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_TIMING 14
#endif
#if defined(PR_SET_NAME) || (defined(HAVE_DECL_PR_SET_NAME) && HAVE_DECL_PR_SET_NAME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_NAME) == (15), "PR_SET_NAME != 15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_NAME 15
#endif
#if defined(PR_GET_NAME) || (defined(HAVE_DECL_PR_GET_NAME) && HAVE_DECL_PR_GET_NAME)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_NAME) == (16), "PR_GET_NAME != 16");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_NAME 16
#endif
#if defined(PR_GET_ENDIAN) || (defined(HAVE_DECL_PR_GET_ENDIAN) && HAVE_DECL_PR_GET_ENDIAN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_ENDIAN) == (19), "PR_GET_ENDIAN != 19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_ENDIAN 19
#endif
#if defined(PR_SET_ENDIAN) || (defined(HAVE_DECL_PR_SET_ENDIAN) && HAVE_DECL_PR_SET_ENDIAN)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_ENDIAN) == (20), "PR_SET_ENDIAN != 20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_ENDIAN 20
#endif
#if defined(PR_GET_SECCOMP) || (defined(HAVE_DECL_PR_GET_SECCOMP) && HAVE_DECL_PR_GET_SECCOMP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_SECCOMP) == (21), "PR_GET_SECCOMP != 21");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_SECCOMP 21
#endif
#if defined(PR_SET_SECCOMP) || (defined(HAVE_DECL_PR_SET_SECCOMP) && HAVE_DECL_PR_SET_SECCOMP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_SECCOMP) == (22), "PR_SET_SECCOMP != 22");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_SECCOMP 22
#endif
#if defined(PR_CAPBSET_READ) || (defined(HAVE_DECL_PR_CAPBSET_READ) && HAVE_DECL_PR_CAPBSET_READ)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_CAPBSET_READ) == (23), "PR_CAPBSET_READ != 23");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_CAPBSET_READ 23
#endif
#if defined(PR_CAPBSET_DROP) || (defined(HAVE_DECL_PR_CAPBSET_DROP) && HAVE_DECL_PR_CAPBSET_DROP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_CAPBSET_DROP) == (24), "PR_CAPBSET_DROP != 24");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_CAPBSET_DROP 24
#endif
#if defined(PR_GET_TSC) || (defined(HAVE_DECL_PR_GET_TSC) && HAVE_DECL_PR_GET_TSC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_TSC) == (25), "PR_GET_TSC != 25");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_TSC 25
#endif
#if defined(PR_SET_TSC) || (defined(HAVE_DECL_PR_SET_TSC) && HAVE_DECL_PR_SET_TSC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_TSC) == (26), "PR_SET_TSC != 26");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_TSC 26
#endif
#if defined(PR_GET_SECUREBITS) || (defined(HAVE_DECL_PR_GET_SECUREBITS) && HAVE_DECL_PR_GET_SECUREBITS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_SECUREBITS) == (27), "PR_GET_SECUREBITS != 27");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_SECUREBITS 27
#endif
#if defined(PR_SET_SECUREBITS) || (defined(HAVE_DECL_PR_SET_SECUREBITS) && HAVE_DECL_PR_SET_SECUREBITS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_SECUREBITS) == (28), "PR_SET_SECUREBITS != 28");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_SECUREBITS 28
#endif
#if defined(PR_SET_TIMERSLACK) || (defined(HAVE_DECL_PR_SET_TIMERSLACK) && HAVE_DECL_PR_SET_TIMERSLACK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_TIMERSLACK) == (29), "PR_SET_TIMERSLACK != 29");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_TIMERSLACK 29
#endif
#if defined(PR_GET_TIMERSLACK) || (defined(HAVE_DECL_PR_GET_TIMERSLACK) && HAVE_DECL_PR_GET_TIMERSLACK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_TIMERSLACK) == (30), "PR_GET_TIMERSLACK != 30");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_TIMERSLACK 30
#endif
#if defined(PR_TASK_PERF_EVENTS_DISABLE) || (defined(HAVE_DECL_PR_TASK_PERF_EVENTS_DISABLE) && HAVE_DECL_PR_TASK_PERF_EVENTS_DISABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_TASK_PERF_EVENTS_DISABLE) == (31), "PR_TASK_PERF_EVENTS_DISABLE != 31");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_TASK_PERF_EVENTS_DISABLE 31
#endif
#if defined(PR_TASK_PERF_EVENTS_ENABLE) || (defined(HAVE_DECL_PR_TASK_PERF_EVENTS_ENABLE) && HAVE_DECL_PR_TASK_PERF_EVENTS_ENABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_TASK_PERF_EVENTS_ENABLE) == (32), "PR_TASK_PERF_EVENTS_ENABLE != 32");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_TASK_PERF_EVENTS_ENABLE 32
#endif
#if defined(PR_MCE_KILL) || (defined(HAVE_DECL_PR_MCE_KILL) && HAVE_DECL_PR_MCE_KILL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_MCE_KILL) == (33), "PR_MCE_KILL != 33");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_MCE_KILL 33
#endif
#if defined(PR_MCE_KILL_GET) || (defined(HAVE_DECL_PR_MCE_KILL_GET) && HAVE_DECL_PR_MCE_KILL_GET)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_MCE_KILL_GET) == (34), "PR_MCE_KILL_GET != 34");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_MCE_KILL_GET 34
#endif
#if defined(PR_SET_MM) || (defined(HAVE_DECL_PR_SET_MM) && HAVE_DECL_PR_SET_MM)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_MM) == (35), "PR_SET_MM != 35");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_MM 35
#endif
#if defined(PR_SET_CHILD_SUBREAPER) || (defined(HAVE_DECL_PR_SET_CHILD_SUBREAPER) && HAVE_DECL_PR_SET_CHILD_SUBREAPER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_CHILD_SUBREAPER) == (36), "PR_SET_CHILD_SUBREAPER != 36");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_CHILD_SUBREAPER 36
#endif
#if defined(PR_GET_CHILD_SUBREAPER) || (defined(HAVE_DECL_PR_GET_CHILD_SUBREAPER) && HAVE_DECL_PR_GET_CHILD_SUBREAPER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_CHILD_SUBREAPER) == (37), "PR_GET_CHILD_SUBREAPER != 37");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_CHILD_SUBREAPER 37
#endif
#if defined(PR_SET_NO_NEW_PRIVS) || (defined(HAVE_DECL_PR_SET_NO_NEW_PRIVS) && HAVE_DECL_PR_SET_NO_NEW_PRIVS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_NO_NEW_PRIVS) == (38), "PR_SET_NO_NEW_PRIVS != 38");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_NO_NEW_PRIVS 38
#endif
#if defined(PR_GET_NO_NEW_PRIVS) || (defined(HAVE_DECL_PR_GET_NO_NEW_PRIVS) && HAVE_DECL_PR_GET_NO_NEW_PRIVS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_NO_NEW_PRIVS) == (39), "PR_GET_NO_NEW_PRIVS != 39");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_NO_NEW_PRIVS 39
#endif
#if defined(PR_GET_TID_ADDRESS) || (defined(HAVE_DECL_PR_GET_TID_ADDRESS) && HAVE_DECL_PR_GET_TID_ADDRESS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_TID_ADDRESS) == (40), "PR_GET_TID_ADDRESS != 40");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_TID_ADDRESS 40
#endif
#if defined(PR_SET_THP_DISABLE) || (defined(HAVE_DECL_PR_SET_THP_DISABLE) && HAVE_DECL_PR_SET_THP_DISABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_THP_DISABLE) == (41), "PR_SET_THP_DISABLE != 41");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_THP_DISABLE 41
#endif
#if defined(PR_GET_THP_DISABLE) || (defined(HAVE_DECL_PR_GET_THP_DISABLE) && HAVE_DECL_PR_GET_THP_DISABLE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_THP_DISABLE) == (42), "PR_GET_THP_DISABLE != 42");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_THP_DISABLE 42
#endif
#if defined(PR_MPX_ENABLE_MANAGEMENT) || (defined(HAVE_DECL_PR_MPX_ENABLE_MANAGEMENT) && HAVE_DECL_PR_MPX_ENABLE_MANAGEMENT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_MPX_ENABLE_MANAGEMENT) == (43), "PR_MPX_ENABLE_MANAGEMENT != 43");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_MPX_ENABLE_MANAGEMENT 43
#endif
#if defined(PR_MPX_DISABLE_MANAGEMENT) || (defined(HAVE_DECL_PR_MPX_DISABLE_MANAGEMENT) && HAVE_DECL_PR_MPX_DISABLE_MANAGEMENT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_MPX_DISABLE_MANAGEMENT) == (44), "PR_MPX_DISABLE_MANAGEMENT != 44");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_MPX_DISABLE_MANAGEMENT 44
#endif
#if defined(PR_SET_FP_MODE) || (defined(HAVE_DECL_PR_SET_FP_MODE) && HAVE_DECL_PR_SET_FP_MODE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_FP_MODE) == (45), "PR_SET_FP_MODE != 45");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_FP_MODE 45
#endif
#if defined(PR_GET_FP_MODE) || (defined(HAVE_DECL_PR_GET_FP_MODE) && HAVE_DECL_PR_GET_FP_MODE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_FP_MODE) == (46), "PR_GET_FP_MODE != 46");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_FP_MODE 46
#endif
#if defined(PR_CAP_AMBIENT) || (defined(HAVE_DECL_PR_CAP_AMBIENT) && HAVE_DECL_PR_CAP_AMBIENT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_CAP_AMBIENT) == (47), "PR_CAP_AMBIENT != 47");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_CAP_AMBIENT 47
#endif
#if defined(PR_SVE_SET_VL) || (defined(HAVE_DECL_PR_SVE_SET_VL) && HAVE_DECL_PR_SVE_SET_VL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SVE_SET_VL) == (50), "PR_SVE_SET_VL != 50");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SVE_SET_VL 50
#endif
#if defined(PR_SVE_GET_VL) || (defined(HAVE_DECL_PR_SVE_GET_VL) && HAVE_DECL_PR_SVE_GET_VL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SVE_GET_VL) == (51), "PR_SVE_GET_VL != 51");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SVE_GET_VL 51
#endif
#if defined(PR_GET_SPECULATION_CTRL) || (defined(HAVE_DECL_PR_GET_SPECULATION_CTRL) && HAVE_DECL_PR_GET_SPECULATION_CTRL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_SPECULATION_CTRL) == (52), "PR_GET_SPECULATION_CTRL != 52");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_SPECULATION_CTRL 52
#endif
#if defined(PR_SET_SPECULATION_CTRL) || (defined(HAVE_DECL_PR_SET_SPECULATION_CTRL) && HAVE_DECL_PR_SET_SPECULATION_CTRL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_SPECULATION_CTRL) == (53), "PR_SET_SPECULATION_CTRL != 53");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_SPECULATION_CTRL 53
#endif
#if defined(PR_PAC_RESET_KEYS) || (defined(HAVE_DECL_PR_PAC_RESET_KEYS) && HAVE_DECL_PR_PAC_RESET_KEYS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_PAC_RESET_KEYS) == (54), "PR_PAC_RESET_KEYS != 54");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_PAC_RESET_KEYS 54
#endif
#if defined(PR_SET_TAGGED_ADDR_CTRL) || (defined(HAVE_DECL_PR_SET_TAGGED_ADDR_CTRL) && HAVE_DECL_PR_SET_TAGGED_ADDR_CTRL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_TAGGED_ADDR_CTRL) == (55), "PR_SET_TAGGED_ADDR_CTRL != 55");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_TAGGED_ADDR_CTRL 55
#endif
#if defined(PR_GET_TAGGED_ADDR_CTRL) || (defined(HAVE_DECL_PR_GET_TAGGED_ADDR_CTRL) && HAVE_DECL_PR_GET_TAGGED_ADDR_CTRL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_TAGGED_ADDR_CTRL) == (56), "PR_GET_TAGGED_ADDR_CTRL != 56");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_TAGGED_ADDR_CTRL 56
#endif
#if defined(PR_SET_IO_FLUSHER) || (defined(HAVE_DECL_PR_SET_IO_FLUSHER) && HAVE_DECL_PR_SET_IO_FLUSHER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_IO_FLUSHER) == (57), "PR_SET_IO_FLUSHER != 57");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_IO_FLUSHER 57
#endif
#if defined(PR_GET_IO_FLUSHER) || (defined(HAVE_DECL_PR_GET_IO_FLUSHER) && HAVE_DECL_PR_GET_IO_FLUSHER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_GET_IO_FLUSHER) == (58), "PR_GET_IO_FLUSHER != 58");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_GET_IO_FLUSHER 58
#endif
#if defined(PR_SET_VMA) || (defined(HAVE_DECL_PR_SET_VMA) && HAVE_DECL_PR_SET_VMA)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_VMA) == (0x53564d41), "PR_SET_VMA != 0x53564d41");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_VMA 0x53564d41
#endif
#if defined(PR_SET_PTRACER) || (defined(HAVE_DECL_PR_SET_PTRACER) && HAVE_DECL_PR_SET_PTRACER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((PR_SET_PTRACER) == (0x59616d61), "PR_SET_PTRACER != 0x59616d61");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define PR_SET_PTRACER 0x59616d61
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat prctl_options in mpers mode

# else

static const struct xlat_data prctl_options_xdata[] = {
 XLAT(PR_SET_PDEATHSIG),
 #define XLAT_VAL_0 ((unsigned) (PR_SET_PDEATHSIG))
 #define XLAT_STR_0 STRINGIFY(PR_SET_PDEATHSIG)
 XLAT(PR_GET_PDEATHSIG),
 #define XLAT_VAL_1 ((unsigned) (PR_GET_PDEATHSIG))
 #define XLAT_STR_1 STRINGIFY(PR_GET_PDEATHSIG)
 XLAT(PR_GET_DUMPABLE),
 #define XLAT_VAL_2 ((unsigned) (PR_GET_DUMPABLE))
 #define XLAT_STR_2 STRINGIFY(PR_GET_DUMPABLE)
 XLAT(PR_SET_DUMPABLE),
 #define XLAT_VAL_3 ((unsigned) (PR_SET_DUMPABLE))
 #define XLAT_STR_3 STRINGIFY(PR_SET_DUMPABLE)
 XLAT(PR_GET_UNALIGN),
 #define XLAT_VAL_4 ((unsigned) (PR_GET_UNALIGN))
 #define XLAT_STR_4 STRINGIFY(PR_GET_UNALIGN)
 XLAT(PR_SET_UNALIGN),
 #define XLAT_VAL_5 ((unsigned) (PR_SET_UNALIGN))
 #define XLAT_STR_5 STRINGIFY(PR_SET_UNALIGN)
 XLAT(PR_GET_KEEPCAPS),
 #define XLAT_VAL_6 ((unsigned) (PR_GET_KEEPCAPS))
 #define XLAT_STR_6 STRINGIFY(PR_GET_KEEPCAPS)
 XLAT(PR_SET_KEEPCAPS),
 #define XLAT_VAL_7 ((unsigned) (PR_SET_KEEPCAPS))
 #define XLAT_STR_7 STRINGIFY(PR_SET_KEEPCAPS)
 XLAT(PR_GET_FPEMU),
 #define XLAT_VAL_8 ((unsigned) (PR_GET_FPEMU))
 #define XLAT_STR_8 STRINGIFY(PR_GET_FPEMU)
 XLAT(PR_SET_FPEMU),
 #define XLAT_VAL_9 ((unsigned) (PR_SET_FPEMU))
 #define XLAT_STR_9 STRINGIFY(PR_SET_FPEMU)
 XLAT(PR_GET_FPEXC),
 #define XLAT_VAL_10 ((unsigned) (PR_GET_FPEXC))
 #define XLAT_STR_10 STRINGIFY(PR_GET_FPEXC)
 XLAT(PR_SET_FPEXC),
 #define XLAT_VAL_11 ((unsigned) (PR_SET_FPEXC))
 #define XLAT_STR_11 STRINGIFY(PR_SET_FPEXC)
 XLAT(PR_GET_TIMING),
 #define XLAT_VAL_12 ((unsigned) (PR_GET_TIMING))
 #define XLAT_STR_12 STRINGIFY(PR_GET_TIMING)
 XLAT(PR_SET_TIMING),
 #define XLAT_VAL_13 ((unsigned) (PR_SET_TIMING))
 #define XLAT_STR_13 STRINGIFY(PR_SET_TIMING)
 XLAT(PR_SET_NAME),
 #define XLAT_VAL_14 ((unsigned) (PR_SET_NAME))
 #define XLAT_STR_14 STRINGIFY(PR_SET_NAME)
 XLAT(PR_GET_NAME),
 #define XLAT_VAL_15 ((unsigned) (PR_GET_NAME))
 #define XLAT_STR_15 STRINGIFY(PR_GET_NAME)
 XLAT(PR_GET_ENDIAN),
 #define XLAT_VAL_16 ((unsigned) (PR_GET_ENDIAN))
 #define XLAT_STR_16 STRINGIFY(PR_GET_ENDIAN)
 XLAT(PR_SET_ENDIAN),
 #define XLAT_VAL_17 ((unsigned) (PR_SET_ENDIAN))
 #define XLAT_STR_17 STRINGIFY(PR_SET_ENDIAN)
 XLAT(PR_GET_SECCOMP),
 #define XLAT_VAL_18 ((unsigned) (PR_GET_SECCOMP))
 #define XLAT_STR_18 STRINGIFY(PR_GET_SECCOMP)
 XLAT(PR_SET_SECCOMP),
 #define XLAT_VAL_19 ((unsigned) (PR_SET_SECCOMP))
 #define XLAT_STR_19 STRINGIFY(PR_SET_SECCOMP)
 XLAT(PR_CAPBSET_READ),
 #define XLAT_VAL_20 ((unsigned) (PR_CAPBSET_READ))
 #define XLAT_STR_20 STRINGIFY(PR_CAPBSET_READ)
 XLAT(PR_CAPBSET_DROP),
 #define XLAT_VAL_21 ((unsigned) (PR_CAPBSET_DROP))
 #define XLAT_STR_21 STRINGIFY(PR_CAPBSET_DROP)
 XLAT(PR_GET_TSC),
 #define XLAT_VAL_22 ((unsigned) (PR_GET_TSC))
 #define XLAT_STR_22 STRINGIFY(PR_GET_TSC)
 XLAT(PR_SET_TSC),
 #define XLAT_VAL_23 ((unsigned) (PR_SET_TSC))
 #define XLAT_STR_23 STRINGIFY(PR_SET_TSC)
 XLAT(PR_GET_SECUREBITS),
 #define XLAT_VAL_24 ((unsigned) (PR_GET_SECUREBITS))
 #define XLAT_STR_24 STRINGIFY(PR_GET_SECUREBITS)
 XLAT(PR_SET_SECUREBITS),
 #define XLAT_VAL_25 ((unsigned) (PR_SET_SECUREBITS))
 #define XLAT_STR_25 STRINGIFY(PR_SET_SECUREBITS)
 XLAT(PR_SET_TIMERSLACK),
 #define XLAT_VAL_26 ((unsigned) (PR_SET_TIMERSLACK))
 #define XLAT_STR_26 STRINGIFY(PR_SET_TIMERSLACK)
 XLAT(PR_GET_TIMERSLACK),
 #define XLAT_VAL_27 ((unsigned) (PR_GET_TIMERSLACK))
 #define XLAT_STR_27 STRINGIFY(PR_GET_TIMERSLACK)
 XLAT(PR_TASK_PERF_EVENTS_DISABLE),
 #define XLAT_VAL_28 ((unsigned) (PR_TASK_PERF_EVENTS_DISABLE))
 #define XLAT_STR_28 STRINGIFY(PR_TASK_PERF_EVENTS_DISABLE)
 XLAT(PR_TASK_PERF_EVENTS_ENABLE),
 #define XLAT_VAL_29 ((unsigned) (PR_TASK_PERF_EVENTS_ENABLE))
 #define XLAT_STR_29 STRINGIFY(PR_TASK_PERF_EVENTS_ENABLE)
 XLAT(PR_MCE_KILL),
 #define XLAT_VAL_30 ((unsigned) (PR_MCE_KILL))
 #define XLAT_STR_30 STRINGIFY(PR_MCE_KILL)
 XLAT(PR_MCE_KILL_GET),
 #define XLAT_VAL_31 ((unsigned) (PR_MCE_KILL_GET))
 #define XLAT_STR_31 STRINGIFY(PR_MCE_KILL_GET)
 XLAT(PR_SET_MM),
 #define XLAT_VAL_32 ((unsigned) (PR_SET_MM))
 #define XLAT_STR_32 STRINGIFY(PR_SET_MM)
 XLAT(PR_SET_CHILD_SUBREAPER),
 #define XLAT_VAL_33 ((unsigned) (PR_SET_CHILD_SUBREAPER))
 #define XLAT_STR_33 STRINGIFY(PR_SET_CHILD_SUBREAPER)
 XLAT(PR_GET_CHILD_SUBREAPER),
 #define XLAT_VAL_34 ((unsigned) (PR_GET_CHILD_SUBREAPER))
 #define XLAT_STR_34 STRINGIFY(PR_GET_CHILD_SUBREAPER)
 XLAT(PR_SET_NO_NEW_PRIVS),
 #define XLAT_VAL_35 ((unsigned) (PR_SET_NO_NEW_PRIVS))
 #define XLAT_STR_35 STRINGIFY(PR_SET_NO_NEW_PRIVS)
 XLAT(PR_GET_NO_NEW_PRIVS),
 #define XLAT_VAL_36 ((unsigned) (PR_GET_NO_NEW_PRIVS))
 #define XLAT_STR_36 STRINGIFY(PR_GET_NO_NEW_PRIVS)
 XLAT(PR_GET_TID_ADDRESS),
 #define XLAT_VAL_37 ((unsigned) (PR_GET_TID_ADDRESS))
 #define XLAT_STR_37 STRINGIFY(PR_GET_TID_ADDRESS)
 XLAT(PR_SET_THP_DISABLE),
 #define XLAT_VAL_38 ((unsigned) (PR_SET_THP_DISABLE))
 #define XLAT_STR_38 STRINGIFY(PR_SET_THP_DISABLE)
 XLAT(PR_GET_THP_DISABLE),
 #define XLAT_VAL_39 ((unsigned) (PR_GET_THP_DISABLE))
 #define XLAT_STR_39 STRINGIFY(PR_GET_THP_DISABLE)
 XLAT(PR_MPX_ENABLE_MANAGEMENT),
 #define XLAT_VAL_40 ((unsigned) (PR_MPX_ENABLE_MANAGEMENT))
 #define XLAT_STR_40 STRINGIFY(PR_MPX_ENABLE_MANAGEMENT)
 XLAT(PR_MPX_DISABLE_MANAGEMENT),
 #define XLAT_VAL_41 ((unsigned) (PR_MPX_DISABLE_MANAGEMENT))
 #define XLAT_STR_41 STRINGIFY(PR_MPX_DISABLE_MANAGEMENT)
 XLAT(PR_SET_FP_MODE),
 #define XLAT_VAL_42 ((unsigned) (PR_SET_FP_MODE))
 #define XLAT_STR_42 STRINGIFY(PR_SET_FP_MODE)
 XLAT(PR_GET_FP_MODE),
 #define XLAT_VAL_43 ((unsigned) (PR_GET_FP_MODE))
 #define XLAT_STR_43 STRINGIFY(PR_GET_FP_MODE)
 XLAT(PR_CAP_AMBIENT),
 #define XLAT_VAL_44 ((unsigned) (PR_CAP_AMBIENT))
 #define XLAT_STR_44 STRINGIFY(PR_CAP_AMBIENT)
 XLAT(PR_SVE_SET_VL),
 #define XLAT_VAL_45 ((unsigned) (PR_SVE_SET_VL))
 #define XLAT_STR_45 STRINGIFY(PR_SVE_SET_VL)
 XLAT(PR_SVE_GET_VL),
 #define XLAT_VAL_46 ((unsigned) (PR_SVE_GET_VL))
 #define XLAT_STR_46 STRINGIFY(PR_SVE_GET_VL)
 XLAT(PR_GET_SPECULATION_CTRL),
 #define XLAT_VAL_47 ((unsigned) (PR_GET_SPECULATION_CTRL))
 #define XLAT_STR_47 STRINGIFY(PR_GET_SPECULATION_CTRL)
 XLAT(PR_SET_SPECULATION_CTRL),
 #define XLAT_VAL_48 ((unsigned) (PR_SET_SPECULATION_CTRL))
 #define XLAT_STR_48 STRINGIFY(PR_SET_SPECULATION_CTRL)
 XLAT(PR_PAC_RESET_KEYS),
 #define XLAT_VAL_49 ((unsigned) (PR_PAC_RESET_KEYS))
 #define XLAT_STR_49 STRINGIFY(PR_PAC_RESET_KEYS)
 XLAT(PR_SET_TAGGED_ADDR_CTRL),
 #define XLAT_VAL_50 ((unsigned) (PR_SET_TAGGED_ADDR_CTRL))
 #define XLAT_STR_50 STRINGIFY(PR_SET_TAGGED_ADDR_CTRL)
 XLAT(PR_GET_TAGGED_ADDR_CTRL),
 #define XLAT_VAL_51 ((unsigned) (PR_GET_TAGGED_ADDR_CTRL))
 #define XLAT_STR_51 STRINGIFY(PR_GET_TAGGED_ADDR_CTRL)
 XLAT(PR_SET_IO_FLUSHER),
 #define XLAT_VAL_52 ((unsigned) (PR_SET_IO_FLUSHER))
 #define XLAT_STR_52 STRINGIFY(PR_SET_IO_FLUSHER)
 XLAT(PR_GET_IO_FLUSHER),
 #define XLAT_VAL_53 ((unsigned) (PR_GET_IO_FLUSHER))
 #define XLAT_STR_53 STRINGIFY(PR_GET_IO_FLUSHER)
 XLAT(PR_SET_VMA),
 #define XLAT_VAL_54 ((unsigned) (PR_SET_VMA))
 #define XLAT_STR_54 STRINGIFY(PR_SET_VMA)
 XLAT(PR_SET_PTRACER),
 #define XLAT_VAL_55 ((unsigned) (PR_SET_PTRACER))
 #define XLAT_STR_55 STRINGIFY(PR_SET_PTRACER)
};
static
const struct xlat prctl_options[1] = { {
 .data = prctl_options_xdata,
 .size = ARRAY_SIZE(prctl_options_xdata),
 .type = XT_SORTED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
#  ifdef XLAT_VAL_31
  | XLAT_VAL_31
#  endif
#  ifdef XLAT_VAL_32
  | XLAT_VAL_32
#  endif
#  ifdef XLAT_VAL_33
  | XLAT_VAL_33
#  endif
#  ifdef XLAT_VAL_34
  | XLAT_VAL_34
#  endif
#  ifdef XLAT_VAL_35
  | XLAT_VAL_35
#  endif
#  ifdef XLAT_VAL_36
  | XLAT_VAL_36
#  endif
#  ifdef XLAT_VAL_37
  | XLAT_VAL_37
#  endif
#  ifdef XLAT_VAL_38
  | XLAT_VAL_38
#  endif
#  ifdef XLAT_VAL_39
  | XLAT_VAL_39
#  endif
#  ifdef XLAT_VAL_40
  | XLAT_VAL_40
#  endif
#  ifdef XLAT_VAL_41
  | XLAT_VAL_41
#  endif
#  ifdef XLAT_VAL_42
  | XLAT_VAL_42
#  endif
#  ifdef XLAT_VAL_43
  | XLAT_VAL_43
#  endif
#  ifdef XLAT_VAL_44
  | XLAT_VAL_44
#  endif
#  ifdef XLAT_VAL_45
  | XLAT_VAL_45
#  endif
#  ifdef XLAT_VAL_46
  | XLAT_VAL_46
#  endif
#  ifdef XLAT_VAL_47
  | XLAT_VAL_47
#  endif
#  ifdef XLAT_VAL_48
  | XLAT_VAL_48
#  endif
#  ifdef XLAT_VAL_49
  | XLAT_VAL_49
#  endif
#  ifdef XLAT_VAL_50
  | XLAT_VAL_50
#  endif
#  ifdef XLAT_VAL_51
  | XLAT_VAL_51
#  endif
#  ifdef XLAT_VAL_52
  | XLAT_VAL_52
#  endif
#  ifdef XLAT_VAL_53
  | XLAT_VAL_53
#  endif
#  ifdef XLAT_VAL_54
  | XLAT_VAL_54
#  endif
#  ifdef XLAT_VAL_55
  | XLAT_VAL_55
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
#  ifdef XLAT_STR_31
  + sizeof(XLAT_STR_31)
#  endif
#  ifdef XLAT_STR_32
  + sizeof(XLAT_STR_32)
#  endif
#  ifdef XLAT_STR_33
  + sizeof(XLAT_STR_33)
#  endif
#  ifdef XLAT_STR_34
  + sizeof(XLAT_STR_34)
#  endif
#  ifdef XLAT_STR_35
  + sizeof(XLAT_STR_35)
#  endif
#  ifdef XLAT_STR_36
  + sizeof(XLAT_STR_36)
#  endif
#  ifdef XLAT_STR_37
  + sizeof(XLAT_STR_37)
#  endif
#  ifdef XLAT_STR_38
  + sizeof(XLAT_STR_38)
#  endif
#  ifdef XLAT_STR_39
  + sizeof(XLAT_STR_39)
#  endif
#  ifdef XLAT_STR_40
  + sizeof(XLAT_STR_40)
#  endif
#  ifdef XLAT_STR_41
  + sizeof(XLAT_STR_41)
#  endif
#  ifdef XLAT_STR_42
  + sizeof(XLAT_STR_42)
#  endif
#  ifdef XLAT_STR_43
  + sizeof(XLAT_STR_43)
#  endif
#  ifdef XLAT_STR_44
  + sizeof(XLAT_STR_44)
#  endif
#  ifdef XLAT_STR_45
  + sizeof(XLAT_STR_45)
#  endif
#  ifdef XLAT_STR_46
  + sizeof(XLAT_STR_46)
#  endif
#  ifdef XLAT_STR_47
  + sizeof(XLAT_STR_47)
#  endif
#  ifdef XLAT_STR_48
  + sizeof(XLAT_STR_48)
#  endif
#  ifdef XLAT_STR_49
  + sizeof(XLAT_STR_49)
#  endif
#  ifdef XLAT_STR_50
  + sizeof(XLAT_STR_50)
#  endif
#  ifdef XLAT_STR_51
  + sizeof(XLAT_STR_51)
#  endif
#  ifdef XLAT_STR_52
  + sizeof(XLAT_STR_52)
#  endif
#  ifdef XLAT_STR_53
  + sizeof(XLAT_STR_53)
#  endif
#  ifdef XLAT_STR_54
  + sizeof(XLAT_STR_54)
#  endif
#  ifdef XLAT_STR_55
  + sizeof(XLAT_STR_55)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
#  undef XLAT_STR_31
#  undef XLAT_VAL_31
#  undef XLAT_STR_32
#  undef XLAT_VAL_32
#  undef XLAT_STR_33
#  undef XLAT_VAL_33
#  undef XLAT_STR_34
#  undef XLAT_VAL_34
#  undef XLAT_STR_35
#  undef XLAT_VAL_35
#  undef XLAT_STR_36
#  undef XLAT_VAL_36
#  undef XLAT_STR_37
#  undef XLAT_VAL_37
#  undef XLAT_STR_38
#  undef XLAT_VAL_38
#  undef XLAT_STR_39
#  undef XLAT_VAL_39
#  undef XLAT_STR_40
#  undef XLAT_VAL_40
#  undef XLAT_STR_41
#  undef XLAT_VAL_41
#  undef XLAT_STR_42
#  undef XLAT_VAL_42
#  undef XLAT_STR_43
#  undef XLAT_VAL_43
#  undef XLAT_STR_44
#  undef XLAT_VAL_44
#  undef XLAT_STR_45
#  undef XLAT_VAL_45
#  undef XLAT_STR_46
#  undef XLAT_VAL_46
#  undef XLAT_STR_47
#  undef XLAT_VAL_47
#  undef XLAT_STR_48
#  undef XLAT_VAL_48
#  undef XLAT_STR_49
#  undef XLAT_VAL_49
#  undef XLAT_STR_50
#  undef XLAT_VAL_50
#  undef XLAT_STR_51
#  undef XLAT_VAL_51
#  undef XLAT_STR_52
#  undef XLAT_VAL_52
#  undef XLAT_STR_53
#  undef XLAT_VAL_53
#  undef XLAT_STR_54
#  undef XLAT_VAL_54
#  undef XLAT_STR_55
#  undef XLAT_VAL_55
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
