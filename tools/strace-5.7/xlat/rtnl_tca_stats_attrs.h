/* Generated by ./xlat/gen.sh from ./xlat/rtnl_tca_stats_attrs.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(TCA_STATS_UNSPEC) || (defined(HAVE_DECL_TCA_STATS_UNSPEC) && HAVE_DECL_TCA_STATS_UNSPEC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_UNSPEC) == (0), "TCA_STATS_UNSPEC != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_UNSPEC 0
#endif
#if defined(TCA_STATS_BASIC) || (defined(HAVE_DECL_TCA_STATS_BASIC) && HAVE_DECL_TCA_STATS_BASIC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_BASIC) == (1), "TCA_STATS_BASIC != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_BASIC 1
#endif
#if defined(TCA_STATS_RATE_EST) || (defined(HAVE_DECL_TCA_STATS_RATE_EST) && HAVE_DECL_TCA_STATS_RATE_EST)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_RATE_EST) == (2), "TCA_STATS_RATE_EST != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_RATE_EST 2
#endif
#if defined(TCA_STATS_QUEUE) || (defined(HAVE_DECL_TCA_STATS_QUEUE) && HAVE_DECL_TCA_STATS_QUEUE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_QUEUE) == (3), "TCA_STATS_QUEUE != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_QUEUE 3
#endif
#if defined(TCA_STATS_APP) || (defined(HAVE_DECL_TCA_STATS_APP) && HAVE_DECL_TCA_STATS_APP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_APP) == (4), "TCA_STATS_APP != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_APP 4
#endif
#if defined(TCA_STATS_RATE_EST64) || (defined(HAVE_DECL_TCA_STATS_RATE_EST64) && HAVE_DECL_TCA_STATS_RATE_EST64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_RATE_EST64) == (5), "TCA_STATS_RATE_EST64 != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_RATE_EST64 5
#endif
#if defined(TCA_STATS_PAD) || (defined(HAVE_DECL_TCA_STATS_PAD) && HAVE_DECL_TCA_STATS_PAD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_PAD) == (6), "TCA_STATS_PAD != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_PAD 6
#endif
#if defined(TCA_STATS_BASIC_HW) || (defined(HAVE_DECL_TCA_STATS_BASIC_HW) && HAVE_DECL_TCA_STATS_BASIC_HW)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_BASIC_HW) == (7), "TCA_STATS_BASIC_HW != 7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_BASIC_HW 7
#endif
#if defined(TCA_STATS_PKT64) || (defined(HAVE_DECL_TCA_STATS_PKT64) && HAVE_DECL_TCA_STATS_PKT64)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((TCA_STATS_PKT64) == (8), "TCA_STATS_PKT64 != 8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define TCA_STATS_PKT64 8
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat rtnl_tca_stats_attrs in mpers mode

# else

static const struct xlat_data rtnl_tca_stats_attrs_xdata[] = {
 [TCA_STATS_UNSPEC] = XLAT(TCA_STATS_UNSPEC),
 #define XLAT_VAL_0 ((unsigned) (TCA_STATS_UNSPEC))
 #define XLAT_STR_0 STRINGIFY(TCA_STATS_UNSPEC)
 [TCA_STATS_BASIC] = XLAT(TCA_STATS_BASIC),
 #define XLAT_VAL_1 ((unsigned) (TCA_STATS_BASIC))
 #define XLAT_STR_1 STRINGIFY(TCA_STATS_BASIC)
 [TCA_STATS_RATE_EST] = XLAT(TCA_STATS_RATE_EST),
 #define XLAT_VAL_2 ((unsigned) (TCA_STATS_RATE_EST))
 #define XLAT_STR_2 STRINGIFY(TCA_STATS_RATE_EST)
 [TCA_STATS_QUEUE] = XLAT(TCA_STATS_QUEUE),
 #define XLAT_VAL_3 ((unsigned) (TCA_STATS_QUEUE))
 #define XLAT_STR_3 STRINGIFY(TCA_STATS_QUEUE)
 [TCA_STATS_APP] = XLAT(TCA_STATS_APP),
 #define XLAT_VAL_4 ((unsigned) (TCA_STATS_APP))
 #define XLAT_STR_4 STRINGIFY(TCA_STATS_APP)
 [TCA_STATS_RATE_EST64] = XLAT(TCA_STATS_RATE_EST64),
 #define XLAT_VAL_5 ((unsigned) (TCA_STATS_RATE_EST64))
 #define XLAT_STR_5 STRINGIFY(TCA_STATS_RATE_EST64)
 [TCA_STATS_PAD] = XLAT(TCA_STATS_PAD),
 #define XLAT_VAL_6 ((unsigned) (TCA_STATS_PAD))
 #define XLAT_STR_6 STRINGIFY(TCA_STATS_PAD)
 [TCA_STATS_BASIC_HW] = XLAT(TCA_STATS_BASIC_HW),
 #define XLAT_VAL_7 ((unsigned) (TCA_STATS_BASIC_HW))
 #define XLAT_STR_7 STRINGIFY(TCA_STATS_BASIC_HW)
 [TCA_STATS_PKT64] = XLAT(TCA_STATS_PKT64),
 #define XLAT_VAL_8 ((unsigned) (TCA_STATS_PKT64))
 #define XLAT_STR_8 STRINGIFY(TCA_STATS_PKT64)
};
static
const struct xlat rtnl_tca_stats_attrs[1] = { {
 .data = rtnl_tca_stats_attrs_xdata,
 .size = ARRAY_SIZE(rtnl_tca_stats_attrs_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
