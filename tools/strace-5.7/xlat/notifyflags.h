/* Generated by ./xlat/gen.sh from ./xlat/notifyflags.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat notifyflags in mpers mode

# else

static const struct xlat_data notifyflags_xdata[] = {
#if defined(DN_ACCESS) || (defined(HAVE_DECL_DN_ACCESS) && HAVE_DECL_DN_ACCESS)
  XLAT(DN_ACCESS),
 #define XLAT_VAL_0 ((unsigned) (DN_ACCESS))
 #define XLAT_STR_0 STRINGIFY(DN_ACCESS)
#endif
#if defined(DN_MODIFY) || (defined(HAVE_DECL_DN_MODIFY) && HAVE_DECL_DN_MODIFY)
  XLAT(DN_MODIFY),
 #define XLAT_VAL_1 ((unsigned) (DN_MODIFY))
 #define XLAT_STR_1 STRINGIFY(DN_MODIFY)
#endif
#if defined(DN_CREATE) || (defined(HAVE_DECL_DN_CREATE) && HAVE_DECL_DN_CREATE)
  XLAT(DN_CREATE),
 #define XLAT_VAL_2 ((unsigned) (DN_CREATE))
 #define XLAT_STR_2 STRINGIFY(DN_CREATE)
#endif
#if defined(DN_DELETE) || (defined(HAVE_DECL_DN_DELETE) && HAVE_DECL_DN_DELETE)
  XLAT(DN_DELETE),
 #define XLAT_VAL_3 ((unsigned) (DN_DELETE))
 #define XLAT_STR_3 STRINGIFY(DN_DELETE)
#endif
#if defined(DN_RENAME) || (defined(HAVE_DECL_DN_RENAME) && HAVE_DECL_DN_RENAME)
  XLAT(DN_RENAME),
 #define XLAT_VAL_4 ((unsigned) (DN_RENAME))
 #define XLAT_STR_4 STRINGIFY(DN_RENAME)
#endif
#if defined(DN_ATTRIB) || (defined(HAVE_DECL_DN_ATTRIB) && HAVE_DECL_DN_ATTRIB)
  XLAT(DN_ATTRIB),
 #define XLAT_VAL_5 ((unsigned) (DN_ATTRIB))
 #define XLAT_STR_5 STRINGIFY(DN_ATTRIB)
#endif
#if defined(DN_MULTISHOT) || (defined(HAVE_DECL_DN_MULTISHOT) && HAVE_DECL_DN_MULTISHOT)
  XLAT(DN_MULTISHOT),
 #define XLAT_VAL_6 ((unsigned) (DN_MULTISHOT))
 #define XLAT_STR_6 STRINGIFY(DN_MULTISHOT)
#endif
};
static
const struct xlat notifyflags[1] = { {
 .data = notifyflags_xdata,
 .size = ARRAY_SIZE(notifyflags_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
