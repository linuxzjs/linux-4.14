/* Generated by ./xlat/gen.sh from ./xlat/rtnl_ifla_brport_attrs.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"

#if defined(IFLA_BRPORT_UNSPEC) || (defined(HAVE_DECL_IFLA_BRPORT_UNSPEC) && HAVE_DECL_IFLA_BRPORT_UNSPEC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_UNSPEC) == (0), "IFLA_BRPORT_UNSPEC != 0");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_UNSPEC 0
#endif
#if defined(IFLA_BRPORT_STATE) || (defined(HAVE_DECL_IFLA_BRPORT_STATE) && HAVE_DECL_IFLA_BRPORT_STATE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_STATE) == (1), "IFLA_BRPORT_STATE != 1");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_STATE 1
#endif
#if defined(IFLA_BRPORT_PRIORITY) || (defined(HAVE_DECL_IFLA_BRPORT_PRIORITY) && HAVE_DECL_IFLA_BRPORT_PRIORITY)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_PRIORITY) == (2), "IFLA_BRPORT_PRIORITY != 2");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_PRIORITY 2
#endif
#if defined(IFLA_BRPORT_COST) || (defined(HAVE_DECL_IFLA_BRPORT_COST) && HAVE_DECL_IFLA_BRPORT_COST)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_COST) == (3), "IFLA_BRPORT_COST != 3");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_COST 3
#endif
#if defined(IFLA_BRPORT_MODE) || (defined(HAVE_DECL_IFLA_BRPORT_MODE) && HAVE_DECL_IFLA_BRPORT_MODE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_MODE) == (4), "IFLA_BRPORT_MODE != 4");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_MODE 4
#endif
#if defined(IFLA_BRPORT_GUARD) || (defined(HAVE_DECL_IFLA_BRPORT_GUARD) && HAVE_DECL_IFLA_BRPORT_GUARD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_GUARD) == (5), "IFLA_BRPORT_GUARD != 5");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_GUARD 5
#endif
#if defined(IFLA_BRPORT_PROTECT) || (defined(HAVE_DECL_IFLA_BRPORT_PROTECT) && HAVE_DECL_IFLA_BRPORT_PROTECT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_PROTECT) == (6), "IFLA_BRPORT_PROTECT != 6");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_PROTECT 6
#endif
#if defined(IFLA_BRPORT_FAST_LEAVE) || (defined(HAVE_DECL_IFLA_BRPORT_FAST_LEAVE) && HAVE_DECL_IFLA_BRPORT_FAST_LEAVE)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_FAST_LEAVE) == (7), "IFLA_BRPORT_FAST_LEAVE != 7");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_FAST_LEAVE 7
#endif
#if defined(IFLA_BRPORT_LEARNING) || (defined(HAVE_DECL_IFLA_BRPORT_LEARNING) && HAVE_DECL_IFLA_BRPORT_LEARNING)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_LEARNING) == (8), "IFLA_BRPORT_LEARNING != 8");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_LEARNING 8
#endif
#if defined(IFLA_BRPORT_UNICAST_FLOOD) || (defined(HAVE_DECL_IFLA_BRPORT_UNICAST_FLOOD) && HAVE_DECL_IFLA_BRPORT_UNICAST_FLOOD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_UNICAST_FLOOD) == (9), "IFLA_BRPORT_UNICAST_FLOOD != 9");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_UNICAST_FLOOD 9
#endif
#if defined(IFLA_BRPORT_PROXYARP) || (defined(HAVE_DECL_IFLA_BRPORT_PROXYARP) && HAVE_DECL_IFLA_BRPORT_PROXYARP)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_PROXYARP) == (10), "IFLA_BRPORT_PROXYARP != 10");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_PROXYARP 10
#endif
#if defined(IFLA_BRPORT_LEARNING_SYNC) || (defined(HAVE_DECL_IFLA_BRPORT_LEARNING_SYNC) && HAVE_DECL_IFLA_BRPORT_LEARNING_SYNC)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_LEARNING_SYNC) == (11), "IFLA_BRPORT_LEARNING_SYNC != 11");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_LEARNING_SYNC 11
#endif
#if defined(IFLA_BRPORT_PROXYARP_WIFI) || (defined(HAVE_DECL_IFLA_BRPORT_PROXYARP_WIFI) && HAVE_DECL_IFLA_BRPORT_PROXYARP_WIFI)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_PROXYARP_WIFI) == (12), "IFLA_BRPORT_PROXYARP_WIFI != 12");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_PROXYARP_WIFI 12
#endif
#if defined(IFLA_BRPORT_ROOT_ID) || (defined(HAVE_DECL_IFLA_BRPORT_ROOT_ID) && HAVE_DECL_IFLA_BRPORT_ROOT_ID)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_ROOT_ID) == (13), "IFLA_BRPORT_ROOT_ID != 13");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_ROOT_ID 13
#endif
#if defined(IFLA_BRPORT_BRIDGE_ID) || (defined(HAVE_DECL_IFLA_BRPORT_BRIDGE_ID) && HAVE_DECL_IFLA_BRPORT_BRIDGE_ID)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_BRIDGE_ID) == (14), "IFLA_BRPORT_BRIDGE_ID != 14");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_BRIDGE_ID 14
#endif
#if defined(IFLA_BRPORT_DESIGNATED_PORT) || (defined(HAVE_DECL_IFLA_BRPORT_DESIGNATED_PORT) && HAVE_DECL_IFLA_BRPORT_DESIGNATED_PORT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_DESIGNATED_PORT) == (15), "IFLA_BRPORT_DESIGNATED_PORT != 15");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_DESIGNATED_PORT 15
#endif
#if defined(IFLA_BRPORT_DESIGNATED_COST) || (defined(HAVE_DECL_IFLA_BRPORT_DESIGNATED_COST) && HAVE_DECL_IFLA_BRPORT_DESIGNATED_COST)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_DESIGNATED_COST) == (16), "IFLA_BRPORT_DESIGNATED_COST != 16");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_DESIGNATED_COST 16
#endif
#if defined(IFLA_BRPORT_ID) || (defined(HAVE_DECL_IFLA_BRPORT_ID) && HAVE_DECL_IFLA_BRPORT_ID)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_ID) == (17), "IFLA_BRPORT_ID != 17");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_ID 17
#endif
#if defined(IFLA_BRPORT_NO) || (defined(HAVE_DECL_IFLA_BRPORT_NO) && HAVE_DECL_IFLA_BRPORT_NO)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_NO) == (18), "IFLA_BRPORT_NO != 18");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_NO 18
#endif
#if defined(IFLA_BRPORT_TOPOLOGY_CHANGE_ACK) || (defined(HAVE_DECL_IFLA_BRPORT_TOPOLOGY_CHANGE_ACK) && HAVE_DECL_IFLA_BRPORT_TOPOLOGY_CHANGE_ACK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_TOPOLOGY_CHANGE_ACK) == (19), "IFLA_BRPORT_TOPOLOGY_CHANGE_ACK != 19");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_TOPOLOGY_CHANGE_ACK 19
#endif
#if defined(IFLA_BRPORT_CONFIG_PENDING) || (defined(HAVE_DECL_IFLA_BRPORT_CONFIG_PENDING) && HAVE_DECL_IFLA_BRPORT_CONFIG_PENDING)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_CONFIG_PENDING) == (20), "IFLA_BRPORT_CONFIG_PENDING != 20");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_CONFIG_PENDING 20
#endif
#if defined(IFLA_BRPORT_MESSAGE_AGE_TIMER) || (defined(HAVE_DECL_IFLA_BRPORT_MESSAGE_AGE_TIMER) && HAVE_DECL_IFLA_BRPORT_MESSAGE_AGE_TIMER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_MESSAGE_AGE_TIMER) == (21), "IFLA_BRPORT_MESSAGE_AGE_TIMER != 21");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_MESSAGE_AGE_TIMER 21
#endif
#if defined(IFLA_BRPORT_FORWARD_DELAY_TIMER) || (defined(HAVE_DECL_IFLA_BRPORT_FORWARD_DELAY_TIMER) && HAVE_DECL_IFLA_BRPORT_FORWARD_DELAY_TIMER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_FORWARD_DELAY_TIMER) == (22), "IFLA_BRPORT_FORWARD_DELAY_TIMER != 22");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_FORWARD_DELAY_TIMER 22
#endif
#if defined(IFLA_BRPORT_HOLD_TIMER) || (defined(HAVE_DECL_IFLA_BRPORT_HOLD_TIMER) && HAVE_DECL_IFLA_BRPORT_HOLD_TIMER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_HOLD_TIMER) == (23), "IFLA_BRPORT_HOLD_TIMER != 23");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_HOLD_TIMER 23
#endif
#if defined(IFLA_BRPORT_FLUSH) || (defined(HAVE_DECL_IFLA_BRPORT_FLUSH) && HAVE_DECL_IFLA_BRPORT_FLUSH)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_FLUSH) == (24), "IFLA_BRPORT_FLUSH != 24");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_FLUSH 24
#endif
#if defined(IFLA_BRPORT_MULTICAST_ROUTER) || (defined(HAVE_DECL_IFLA_BRPORT_MULTICAST_ROUTER) && HAVE_DECL_IFLA_BRPORT_MULTICAST_ROUTER)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_MULTICAST_ROUTER) == (25), "IFLA_BRPORT_MULTICAST_ROUTER != 25");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_MULTICAST_ROUTER 25
#endif
#if defined(IFLA_BRPORT_PAD) || (defined(HAVE_DECL_IFLA_BRPORT_PAD) && HAVE_DECL_IFLA_BRPORT_PAD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_PAD) == (26), "IFLA_BRPORT_PAD != 26");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_PAD 26
#endif
#if defined(IFLA_BRPORT_MCAST_FLOOD) || (defined(HAVE_DECL_IFLA_BRPORT_MCAST_FLOOD) && HAVE_DECL_IFLA_BRPORT_MCAST_FLOOD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_MCAST_FLOOD) == (27), "IFLA_BRPORT_MCAST_FLOOD != 27");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_MCAST_FLOOD 27
#endif
#if defined(IFLA_BRPORT_MCAST_TO_UCAST) || (defined(HAVE_DECL_IFLA_BRPORT_MCAST_TO_UCAST) && HAVE_DECL_IFLA_BRPORT_MCAST_TO_UCAST)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_MCAST_TO_UCAST) == (28), "IFLA_BRPORT_MCAST_TO_UCAST != 28");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_MCAST_TO_UCAST 28
#endif
#if defined(IFLA_BRPORT_VLAN_TUNNEL) || (defined(HAVE_DECL_IFLA_BRPORT_VLAN_TUNNEL) && HAVE_DECL_IFLA_BRPORT_VLAN_TUNNEL)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_VLAN_TUNNEL) == (29), "IFLA_BRPORT_VLAN_TUNNEL != 29");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_VLAN_TUNNEL 29
#endif
#if defined(IFLA_BRPORT_BCAST_FLOOD) || (defined(HAVE_DECL_IFLA_BRPORT_BCAST_FLOOD) && HAVE_DECL_IFLA_BRPORT_BCAST_FLOOD)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_BCAST_FLOOD) == (30), "IFLA_BRPORT_BCAST_FLOOD != 30");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_BCAST_FLOOD 30
#endif
#if defined(IFLA_BRPORT_GROUP_FWD_MASK) || (defined(HAVE_DECL_IFLA_BRPORT_GROUP_FWD_MASK) && HAVE_DECL_IFLA_BRPORT_GROUP_FWD_MASK)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_GROUP_FWD_MASK) == (31), "IFLA_BRPORT_GROUP_FWD_MASK != 31");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_GROUP_FWD_MASK 31
#endif
#if defined(IFLA_BRPORT_NEIGH_SUPPRESS) || (defined(HAVE_DECL_IFLA_BRPORT_NEIGH_SUPPRESS) && HAVE_DECL_IFLA_BRPORT_NEIGH_SUPPRESS)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_NEIGH_SUPPRESS) == (32), "IFLA_BRPORT_NEIGH_SUPPRESS != 32");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_NEIGH_SUPPRESS 32
#endif
#if defined(IFLA_BRPORT_ISOLATED) || (defined(HAVE_DECL_IFLA_BRPORT_ISOLATED) && HAVE_DECL_IFLA_BRPORT_ISOLATED)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_ISOLATED) == (33), "IFLA_BRPORT_ISOLATED != 33");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_ISOLATED 33
#endif
#if defined(IFLA_BRPORT_BACKUP_PORT) || (defined(HAVE_DECL_IFLA_BRPORT_BACKUP_PORT) && HAVE_DECL_IFLA_BRPORT_BACKUP_PORT)
DIAG_PUSH_IGNORE_TAUTOLOGICAL_COMPARE
static_assert((IFLA_BRPORT_BACKUP_PORT) == (34), "IFLA_BRPORT_BACKUP_PORT != 34");
DIAG_POP_IGNORE_TAUTOLOGICAL_COMPARE
#else
# define IFLA_BRPORT_BACKUP_PORT 34
#endif

#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat rtnl_ifla_brport_attrs in mpers mode

# else

static const struct xlat_data rtnl_ifla_brport_attrs_xdata[] = {
 [IFLA_BRPORT_UNSPEC] = XLAT(IFLA_BRPORT_UNSPEC),
 #define XLAT_VAL_0 ((unsigned) (IFLA_BRPORT_UNSPEC))
 #define XLAT_STR_0 STRINGIFY(IFLA_BRPORT_UNSPEC)
 [IFLA_BRPORT_STATE] = XLAT(IFLA_BRPORT_STATE),
 #define XLAT_VAL_1 ((unsigned) (IFLA_BRPORT_STATE))
 #define XLAT_STR_1 STRINGIFY(IFLA_BRPORT_STATE)
 [IFLA_BRPORT_PRIORITY] = XLAT(IFLA_BRPORT_PRIORITY),
 #define XLAT_VAL_2 ((unsigned) (IFLA_BRPORT_PRIORITY))
 #define XLAT_STR_2 STRINGIFY(IFLA_BRPORT_PRIORITY)
 [IFLA_BRPORT_COST] = XLAT(IFLA_BRPORT_COST),
 #define XLAT_VAL_3 ((unsigned) (IFLA_BRPORT_COST))
 #define XLAT_STR_3 STRINGIFY(IFLA_BRPORT_COST)
 [IFLA_BRPORT_MODE] = XLAT(IFLA_BRPORT_MODE),
 #define XLAT_VAL_4 ((unsigned) (IFLA_BRPORT_MODE))
 #define XLAT_STR_4 STRINGIFY(IFLA_BRPORT_MODE)
 [IFLA_BRPORT_GUARD] = XLAT(IFLA_BRPORT_GUARD),
 #define XLAT_VAL_5 ((unsigned) (IFLA_BRPORT_GUARD))
 #define XLAT_STR_5 STRINGIFY(IFLA_BRPORT_GUARD)
 [IFLA_BRPORT_PROTECT] = XLAT(IFLA_BRPORT_PROTECT),
 #define XLAT_VAL_6 ((unsigned) (IFLA_BRPORT_PROTECT))
 #define XLAT_STR_6 STRINGIFY(IFLA_BRPORT_PROTECT)
 [IFLA_BRPORT_FAST_LEAVE] = XLAT(IFLA_BRPORT_FAST_LEAVE),
 #define XLAT_VAL_7 ((unsigned) (IFLA_BRPORT_FAST_LEAVE))
 #define XLAT_STR_7 STRINGIFY(IFLA_BRPORT_FAST_LEAVE)
 [IFLA_BRPORT_LEARNING] = XLAT(IFLA_BRPORT_LEARNING),
 #define XLAT_VAL_8 ((unsigned) (IFLA_BRPORT_LEARNING))
 #define XLAT_STR_8 STRINGIFY(IFLA_BRPORT_LEARNING)
 [IFLA_BRPORT_UNICAST_FLOOD] = XLAT(IFLA_BRPORT_UNICAST_FLOOD),
 #define XLAT_VAL_9 ((unsigned) (IFLA_BRPORT_UNICAST_FLOOD))
 #define XLAT_STR_9 STRINGIFY(IFLA_BRPORT_UNICAST_FLOOD)
 [IFLA_BRPORT_PROXYARP] = XLAT(IFLA_BRPORT_PROXYARP),
 #define XLAT_VAL_10 ((unsigned) (IFLA_BRPORT_PROXYARP))
 #define XLAT_STR_10 STRINGIFY(IFLA_BRPORT_PROXYARP)
 [IFLA_BRPORT_LEARNING_SYNC] = XLAT(IFLA_BRPORT_LEARNING_SYNC),
 #define XLAT_VAL_11 ((unsigned) (IFLA_BRPORT_LEARNING_SYNC))
 #define XLAT_STR_11 STRINGIFY(IFLA_BRPORT_LEARNING_SYNC)
 [IFLA_BRPORT_PROXYARP_WIFI] = XLAT(IFLA_BRPORT_PROXYARP_WIFI),
 #define XLAT_VAL_12 ((unsigned) (IFLA_BRPORT_PROXYARP_WIFI))
 #define XLAT_STR_12 STRINGIFY(IFLA_BRPORT_PROXYARP_WIFI)
 [IFLA_BRPORT_ROOT_ID] = XLAT(IFLA_BRPORT_ROOT_ID),
 #define XLAT_VAL_13 ((unsigned) (IFLA_BRPORT_ROOT_ID))
 #define XLAT_STR_13 STRINGIFY(IFLA_BRPORT_ROOT_ID)
 [IFLA_BRPORT_BRIDGE_ID] = XLAT(IFLA_BRPORT_BRIDGE_ID),
 #define XLAT_VAL_14 ((unsigned) (IFLA_BRPORT_BRIDGE_ID))
 #define XLAT_STR_14 STRINGIFY(IFLA_BRPORT_BRIDGE_ID)
 [IFLA_BRPORT_DESIGNATED_PORT] = XLAT(IFLA_BRPORT_DESIGNATED_PORT),
 #define XLAT_VAL_15 ((unsigned) (IFLA_BRPORT_DESIGNATED_PORT))
 #define XLAT_STR_15 STRINGIFY(IFLA_BRPORT_DESIGNATED_PORT)
 [IFLA_BRPORT_DESIGNATED_COST] = XLAT(IFLA_BRPORT_DESIGNATED_COST),
 #define XLAT_VAL_16 ((unsigned) (IFLA_BRPORT_DESIGNATED_COST))
 #define XLAT_STR_16 STRINGIFY(IFLA_BRPORT_DESIGNATED_COST)
 [IFLA_BRPORT_ID] = XLAT(IFLA_BRPORT_ID),
 #define XLAT_VAL_17 ((unsigned) (IFLA_BRPORT_ID))
 #define XLAT_STR_17 STRINGIFY(IFLA_BRPORT_ID)
 [IFLA_BRPORT_NO] = XLAT(IFLA_BRPORT_NO),
 #define XLAT_VAL_18 ((unsigned) (IFLA_BRPORT_NO))
 #define XLAT_STR_18 STRINGIFY(IFLA_BRPORT_NO)
 [IFLA_BRPORT_TOPOLOGY_CHANGE_ACK] = XLAT(IFLA_BRPORT_TOPOLOGY_CHANGE_ACK),
 #define XLAT_VAL_19 ((unsigned) (IFLA_BRPORT_TOPOLOGY_CHANGE_ACK))
 #define XLAT_STR_19 STRINGIFY(IFLA_BRPORT_TOPOLOGY_CHANGE_ACK)
 [IFLA_BRPORT_CONFIG_PENDING] = XLAT(IFLA_BRPORT_CONFIG_PENDING),
 #define XLAT_VAL_20 ((unsigned) (IFLA_BRPORT_CONFIG_PENDING))
 #define XLAT_STR_20 STRINGIFY(IFLA_BRPORT_CONFIG_PENDING)
 [IFLA_BRPORT_MESSAGE_AGE_TIMER] = XLAT(IFLA_BRPORT_MESSAGE_AGE_TIMER),
 #define XLAT_VAL_21 ((unsigned) (IFLA_BRPORT_MESSAGE_AGE_TIMER))
 #define XLAT_STR_21 STRINGIFY(IFLA_BRPORT_MESSAGE_AGE_TIMER)
 [IFLA_BRPORT_FORWARD_DELAY_TIMER] = XLAT(IFLA_BRPORT_FORWARD_DELAY_TIMER),
 #define XLAT_VAL_22 ((unsigned) (IFLA_BRPORT_FORWARD_DELAY_TIMER))
 #define XLAT_STR_22 STRINGIFY(IFLA_BRPORT_FORWARD_DELAY_TIMER)
 [IFLA_BRPORT_HOLD_TIMER] = XLAT(IFLA_BRPORT_HOLD_TIMER),
 #define XLAT_VAL_23 ((unsigned) (IFLA_BRPORT_HOLD_TIMER))
 #define XLAT_STR_23 STRINGIFY(IFLA_BRPORT_HOLD_TIMER)
 [IFLA_BRPORT_FLUSH] = XLAT(IFLA_BRPORT_FLUSH),
 #define XLAT_VAL_24 ((unsigned) (IFLA_BRPORT_FLUSH))
 #define XLAT_STR_24 STRINGIFY(IFLA_BRPORT_FLUSH)
 [IFLA_BRPORT_MULTICAST_ROUTER] = XLAT(IFLA_BRPORT_MULTICAST_ROUTER),
 #define XLAT_VAL_25 ((unsigned) (IFLA_BRPORT_MULTICAST_ROUTER))
 #define XLAT_STR_25 STRINGIFY(IFLA_BRPORT_MULTICAST_ROUTER)
 [IFLA_BRPORT_PAD] = XLAT(IFLA_BRPORT_PAD),
 #define XLAT_VAL_26 ((unsigned) (IFLA_BRPORT_PAD))
 #define XLAT_STR_26 STRINGIFY(IFLA_BRPORT_PAD)
 [IFLA_BRPORT_MCAST_FLOOD] = XLAT(IFLA_BRPORT_MCAST_FLOOD),
 #define XLAT_VAL_27 ((unsigned) (IFLA_BRPORT_MCAST_FLOOD))
 #define XLAT_STR_27 STRINGIFY(IFLA_BRPORT_MCAST_FLOOD)
 [IFLA_BRPORT_MCAST_TO_UCAST] = XLAT(IFLA_BRPORT_MCAST_TO_UCAST),
 #define XLAT_VAL_28 ((unsigned) (IFLA_BRPORT_MCAST_TO_UCAST))
 #define XLAT_STR_28 STRINGIFY(IFLA_BRPORT_MCAST_TO_UCAST)
 [IFLA_BRPORT_VLAN_TUNNEL] = XLAT(IFLA_BRPORT_VLAN_TUNNEL),
 #define XLAT_VAL_29 ((unsigned) (IFLA_BRPORT_VLAN_TUNNEL))
 #define XLAT_STR_29 STRINGIFY(IFLA_BRPORT_VLAN_TUNNEL)
 [IFLA_BRPORT_BCAST_FLOOD] = XLAT(IFLA_BRPORT_BCAST_FLOOD),
 #define XLAT_VAL_30 ((unsigned) (IFLA_BRPORT_BCAST_FLOOD))
 #define XLAT_STR_30 STRINGIFY(IFLA_BRPORT_BCAST_FLOOD)
 [IFLA_BRPORT_GROUP_FWD_MASK] = XLAT(IFLA_BRPORT_GROUP_FWD_MASK),
 #define XLAT_VAL_31 ((unsigned) (IFLA_BRPORT_GROUP_FWD_MASK))
 #define XLAT_STR_31 STRINGIFY(IFLA_BRPORT_GROUP_FWD_MASK)
 [IFLA_BRPORT_NEIGH_SUPPRESS] = XLAT(IFLA_BRPORT_NEIGH_SUPPRESS),
 #define XLAT_VAL_32 ((unsigned) (IFLA_BRPORT_NEIGH_SUPPRESS))
 #define XLAT_STR_32 STRINGIFY(IFLA_BRPORT_NEIGH_SUPPRESS)
 [IFLA_BRPORT_ISOLATED] = XLAT(IFLA_BRPORT_ISOLATED),
 #define XLAT_VAL_33 ((unsigned) (IFLA_BRPORT_ISOLATED))
 #define XLAT_STR_33 STRINGIFY(IFLA_BRPORT_ISOLATED)
 [IFLA_BRPORT_BACKUP_PORT] = XLAT(IFLA_BRPORT_BACKUP_PORT),
 #define XLAT_VAL_34 ((unsigned) (IFLA_BRPORT_BACKUP_PORT))
 #define XLAT_STR_34 STRINGIFY(IFLA_BRPORT_BACKUP_PORT)
};
static
const struct xlat rtnl_ifla_brport_attrs[1] = { {
 .data = rtnl_ifla_brport_attrs_xdata,
 .size = ARRAY_SIZE(rtnl_ifla_brport_attrs_xdata),
 .type = XT_INDEXED,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
#  ifdef XLAT_VAL_22
  | XLAT_VAL_22
#  endif
#  ifdef XLAT_VAL_23
  | XLAT_VAL_23
#  endif
#  ifdef XLAT_VAL_24
  | XLAT_VAL_24
#  endif
#  ifdef XLAT_VAL_25
  | XLAT_VAL_25
#  endif
#  ifdef XLAT_VAL_26
  | XLAT_VAL_26
#  endif
#  ifdef XLAT_VAL_27
  | XLAT_VAL_27
#  endif
#  ifdef XLAT_VAL_28
  | XLAT_VAL_28
#  endif
#  ifdef XLAT_VAL_29
  | XLAT_VAL_29
#  endif
#  ifdef XLAT_VAL_30
  | XLAT_VAL_30
#  endif
#  ifdef XLAT_VAL_31
  | XLAT_VAL_31
#  endif
#  ifdef XLAT_VAL_32
  | XLAT_VAL_32
#  endif
#  ifdef XLAT_VAL_33
  | XLAT_VAL_33
#  endif
#  ifdef XLAT_VAL_34
  | XLAT_VAL_34
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
#  ifdef XLAT_STR_22
  + sizeof(XLAT_STR_22)
#  endif
#  ifdef XLAT_STR_23
  + sizeof(XLAT_STR_23)
#  endif
#  ifdef XLAT_STR_24
  + sizeof(XLAT_STR_24)
#  endif
#  ifdef XLAT_STR_25
  + sizeof(XLAT_STR_25)
#  endif
#  ifdef XLAT_STR_26
  + sizeof(XLAT_STR_26)
#  endif
#  ifdef XLAT_STR_27
  + sizeof(XLAT_STR_27)
#  endif
#  ifdef XLAT_STR_28
  + sizeof(XLAT_STR_28)
#  endif
#  ifdef XLAT_STR_29
  + sizeof(XLAT_STR_29)
#  endif
#  ifdef XLAT_STR_30
  + sizeof(XLAT_STR_30)
#  endif
#  ifdef XLAT_STR_31
  + sizeof(XLAT_STR_31)
#  endif
#  ifdef XLAT_STR_32
  + sizeof(XLAT_STR_32)
#  endif
#  ifdef XLAT_STR_33
  + sizeof(XLAT_STR_33)
#  endif
#  ifdef XLAT_STR_34
  + sizeof(XLAT_STR_34)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
#  undef XLAT_STR_22
#  undef XLAT_VAL_22
#  undef XLAT_STR_23
#  undef XLAT_VAL_23
#  undef XLAT_STR_24
#  undef XLAT_VAL_24
#  undef XLAT_STR_25
#  undef XLAT_VAL_25
#  undef XLAT_STR_26
#  undef XLAT_VAL_26
#  undef XLAT_STR_27
#  undef XLAT_VAL_27
#  undef XLAT_STR_28
#  undef XLAT_VAL_28
#  undef XLAT_STR_29
#  undef XLAT_VAL_29
#  undef XLAT_STR_30
#  undef XLAT_VAL_30
#  undef XLAT_STR_31
#  undef XLAT_VAL_31
#  undef XLAT_STR_32
#  undef XLAT_VAL_32
#  undef XLAT_STR_33
#  undef XLAT_VAL_33
#  undef XLAT_STR_34
#  undef XLAT_VAL_34
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
