/* Generated by ./xlat/gen.sh from ./xlat/sysctl_net_core.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat sysctl_net_core in mpers mode

# else

static const struct xlat_data sysctl_net_core_xdata[] = {
 XLAT(NET_CORE_WMEM_MAX),
 #define XLAT_VAL_0 ((unsigned) (NET_CORE_WMEM_MAX))
 #define XLAT_STR_0 STRINGIFY(NET_CORE_WMEM_MAX)
 XLAT(NET_CORE_RMEM_MAX),
 #define XLAT_VAL_1 ((unsigned) (NET_CORE_RMEM_MAX))
 #define XLAT_STR_1 STRINGIFY(NET_CORE_RMEM_MAX)
 XLAT(NET_CORE_WMEM_DEFAULT),
 #define XLAT_VAL_2 ((unsigned) (NET_CORE_WMEM_DEFAULT))
 #define XLAT_STR_2 STRINGIFY(NET_CORE_WMEM_DEFAULT)
 XLAT(NET_CORE_RMEM_DEFAULT),
 #define XLAT_VAL_3 ((unsigned) (NET_CORE_RMEM_DEFAULT))
 #define XLAT_STR_3 STRINGIFY(NET_CORE_RMEM_DEFAULT)
 XLAT(NET_CORE_MAX_BACKLOG),
 #define XLAT_VAL_4 ((unsigned) (NET_CORE_MAX_BACKLOG))
 #define XLAT_STR_4 STRINGIFY(NET_CORE_MAX_BACKLOG)
 XLAT(NET_CORE_FASTROUTE),
 #define XLAT_VAL_5 ((unsigned) (NET_CORE_FASTROUTE))
 #define XLAT_STR_5 STRINGIFY(NET_CORE_FASTROUTE)
 XLAT(NET_CORE_MSG_COST),
 #define XLAT_VAL_6 ((unsigned) (NET_CORE_MSG_COST))
 #define XLAT_STR_6 STRINGIFY(NET_CORE_MSG_COST)
 XLAT(NET_CORE_MSG_BURST),
 #define XLAT_VAL_7 ((unsigned) (NET_CORE_MSG_BURST))
 #define XLAT_STR_7 STRINGIFY(NET_CORE_MSG_BURST)
 XLAT(NET_CORE_OPTMEM_MAX),
 #define XLAT_VAL_8 ((unsigned) (NET_CORE_OPTMEM_MAX))
 #define XLAT_STR_8 STRINGIFY(NET_CORE_OPTMEM_MAX)
 XLAT(NET_CORE_HOT_LIST_LENGTH),
 #define XLAT_VAL_9 ((unsigned) (NET_CORE_HOT_LIST_LENGTH))
 #define XLAT_STR_9 STRINGIFY(NET_CORE_HOT_LIST_LENGTH)
 XLAT(NET_CORE_DIVERT_VERSION),
 #define XLAT_VAL_10 ((unsigned) (NET_CORE_DIVERT_VERSION))
 #define XLAT_STR_10 STRINGIFY(NET_CORE_DIVERT_VERSION)
 XLAT(NET_CORE_NO_CONG_THRESH),
 #define XLAT_VAL_11 ((unsigned) (NET_CORE_NO_CONG_THRESH))
 #define XLAT_STR_11 STRINGIFY(NET_CORE_NO_CONG_THRESH)
 XLAT(NET_CORE_NO_CONG),
 #define XLAT_VAL_12 ((unsigned) (NET_CORE_NO_CONG))
 #define XLAT_STR_12 STRINGIFY(NET_CORE_NO_CONG)
 XLAT(NET_CORE_LO_CONG),
 #define XLAT_VAL_13 ((unsigned) (NET_CORE_LO_CONG))
 #define XLAT_STR_13 STRINGIFY(NET_CORE_LO_CONG)
 XLAT(NET_CORE_MOD_CONG),
 #define XLAT_VAL_14 ((unsigned) (NET_CORE_MOD_CONG))
 #define XLAT_STR_14 STRINGIFY(NET_CORE_MOD_CONG)
 XLAT(NET_CORE_DEV_WEIGHT),
 #define XLAT_VAL_15 ((unsigned) (NET_CORE_DEV_WEIGHT))
 #define XLAT_STR_15 STRINGIFY(NET_CORE_DEV_WEIGHT)
 XLAT(NET_CORE_SOMAXCONN),
 #define XLAT_VAL_16 ((unsigned) (NET_CORE_SOMAXCONN))
 #define XLAT_STR_16 STRINGIFY(NET_CORE_SOMAXCONN)
#if defined(NET_CORE_DESTROY_DELAY) || (defined(HAVE_DECL_NET_CORE_DESTROY_DELAY) && HAVE_DECL_NET_CORE_DESTROY_DELAY)
  XLAT(NET_CORE_DESTROY_DELAY),
 #define XLAT_VAL_17 ((unsigned) (NET_CORE_DESTROY_DELAY))
 #define XLAT_STR_17 STRINGIFY(NET_CORE_DESTROY_DELAY)
#endif
#if defined(NET_CORE_BUDGET) || (defined(HAVE_DECL_NET_CORE_BUDGET) && HAVE_DECL_NET_CORE_BUDGET)
  XLAT(NET_CORE_BUDGET),
 #define XLAT_VAL_18 ((unsigned) (NET_CORE_BUDGET))
 #define XLAT_STR_18 STRINGIFY(NET_CORE_BUDGET)
#endif
#if defined(NET_CORE_AEVENT_ETIME) || (defined(HAVE_DECL_NET_CORE_AEVENT_ETIME) && HAVE_DECL_NET_CORE_AEVENT_ETIME)
  XLAT(NET_CORE_AEVENT_ETIME),
 #define XLAT_VAL_19 ((unsigned) (NET_CORE_AEVENT_ETIME))
 #define XLAT_STR_19 STRINGIFY(NET_CORE_AEVENT_ETIME)
#endif
#if defined(NET_CORE_AEVENT_RSEQTH) || (defined(HAVE_DECL_NET_CORE_AEVENT_RSEQTH) && HAVE_DECL_NET_CORE_AEVENT_RSEQTH)
  XLAT(NET_CORE_AEVENT_RSEQTH),
 #define XLAT_VAL_20 ((unsigned) (NET_CORE_AEVENT_RSEQTH))
 #define XLAT_STR_20 STRINGIFY(NET_CORE_AEVENT_RSEQTH)
#endif
#if defined(NET_CORE_WARNINGS) || (defined(HAVE_DECL_NET_CORE_WARNINGS) && HAVE_DECL_NET_CORE_WARNINGS)
  XLAT(NET_CORE_WARNINGS),
 #define XLAT_VAL_21 ((unsigned) (NET_CORE_WARNINGS))
 #define XLAT_STR_21 STRINGIFY(NET_CORE_WARNINGS)
#endif
};
static
const struct xlat sysctl_net_core[1] = { {
 .data = sysctl_net_core_xdata,
 .size = ARRAY_SIZE(sysctl_net_core_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
#  ifdef XLAT_VAL_2
  | XLAT_VAL_2
#  endif
#  ifdef XLAT_VAL_3
  | XLAT_VAL_3
#  endif
#  ifdef XLAT_VAL_4
  | XLAT_VAL_4
#  endif
#  ifdef XLAT_VAL_5
  | XLAT_VAL_5
#  endif
#  ifdef XLAT_VAL_6
  | XLAT_VAL_6
#  endif
#  ifdef XLAT_VAL_7
  | XLAT_VAL_7
#  endif
#  ifdef XLAT_VAL_8
  | XLAT_VAL_8
#  endif
#  ifdef XLAT_VAL_9
  | XLAT_VAL_9
#  endif
#  ifdef XLAT_VAL_10
  | XLAT_VAL_10
#  endif
#  ifdef XLAT_VAL_11
  | XLAT_VAL_11
#  endif
#  ifdef XLAT_VAL_12
  | XLAT_VAL_12
#  endif
#  ifdef XLAT_VAL_13
  | XLAT_VAL_13
#  endif
#  ifdef XLAT_VAL_14
  | XLAT_VAL_14
#  endif
#  ifdef XLAT_VAL_15
  | XLAT_VAL_15
#  endif
#  ifdef XLAT_VAL_16
  | XLAT_VAL_16
#  endif
#  ifdef XLAT_VAL_17
  | XLAT_VAL_17
#  endif
#  ifdef XLAT_VAL_18
  | XLAT_VAL_18
#  endif
#  ifdef XLAT_VAL_19
  | XLAT_VAL_19
#  endif
#  ifdef XLAT_VAL_20
  | XLAT_VAL_20
#  endif
#  ifdef XLAT_VAL_21
  | XLAT_VAL_21
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
#  ifdef XLAT_STR_2
  + sizeof(XLAT_STR_2)
#  endif
#  ifdef XLAT_STR_3
  + sizeof(XLAT_STR_3)
#  endif
#  ifdef XLAT_STR_4
  + sizeof(XLAT_STR_4)
#  endif
#  ifdef XLAT_STR_5
  + sizeof(XLAT_STR_5)
#  endif
#  ifdef XLAT_STR_6
  + sizeof(XLAT_STR_6)
#  endif
#  ifdef XLAT_STR_7
  + sizeof(XLAT_STR_7)
#  endif
#  ifdef XLAT_STR_8
  + sizeof(XLAT_STR_8)
#  endif
#  ifdef XLAT_STR_9
  + sizeof(XLAT_STR_9)
#  endif
#  ifdef XLAT_STR_10
  + sizeof(XLAT_STR_10)
#  endif
#  ifdef XLAT_STR_11
  + sizeof(XLAT_STR_11)
#  endif
#  ifdef XLAT_STR_12
  + sizeof(XLAT_STR_12)
#  endif
#  ifdef XLAT_STR_13
  + sizeof(XLAT_STR_13)
#  endif
#  ifdef XLAT_STR_14
  + sizeof(XLAT_STR_14)
#  endif
#  ifdef XLAT_STR_15
  + sizeof(XLAT_STR_15)
#  endif
#  ifdef XLAT_STR_16
  + sizeof(XLAT_STR_16)
#  endif
#  ifdef XLAT_STR_17
  + sizeof(XLAT_STR_17)
#  endif
#  ifdef XLAT_STR_18
  + sizeof(XLAT_STR_18)
#  endif
#  ifdef XLAT_STR_19
  + sizeof(XLAT_STR_19)
#  endif
#  ifdef XLAT_STR_20
  + sizeof(XLAT_STR_20)
#  endif
#  ifdef XLAT_STR_21
  + sizeof(XLAT_STR_21)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
#  undef XLAT_STR_2
#  undef XLAT_VAL_2
#  undef XLAT_STR_3
#  undef XLAT_VAL_3
#  undef XLAT_STR_4
#  undef XLAT_VAL_4
#  undef XLAT_STR_5
#  undef XLAT_VAL_5
#  undef XLAT_STR_6
#  undef XLAT_VAL_6
#  undef XLAT_STR_7
#  undef XLAT_VAL_7
#  undef XLAT_STR_8
#  undef XLAT_VAL_8
#  undef XLAT_STR_9
#  undef XLAT_VAL_9
#  undef XLAT_STR_10
#  undef XLAT_VAL_10
#  undef XLAT_STR_11
#  undef XLAT_VAL_11
#  undef XLAT_STR_12
#  undef XLAT_VAL_12
#  undef XLAT_STR_13
#  undef XLAT_VAL_13
#  undef XLAT_STR_14
#  undef XLAT_VAL_14
#  undef XLAT_STR_15
#  undef XLAT_VAL_15
#  undef XLAT_STR_16
#  undef XLAT_VAL_16
#  undef XLAT_STR_17
#  undef XLAT_VAL_17
#  undef XLAT_STR_18
#  undef XLAT_VAL_18
#  undef XLAT_STR_19
#  undef XLAT_VAL_19
#  undef XLAT_STR_20
#  undef XLAT_VAL_20
#  undef XLAT_STR_21
#  undef XLAT_VAL_21
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
