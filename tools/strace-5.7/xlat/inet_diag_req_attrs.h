/* Generated by ./xlat/gen.sh from ./xlat/inet_diag_req_attrs.in; do not edit. */

#include "gcc_compat.h"
#include "static_assert.h"


#ifndef XLAT_MACROS_ONLY

# ifdef IN_MPERS

#  error static const struct xlat inet_diag_req_attrs in mpers mode

# else

static const struct xlat_data inet_diag_req_attrs_xdata[] = {
 XLAT(INET_DIAG_REQ_NONE),
 #define XLAT_VAL_0 ((unsigned) (INET_DIAG_REQ_NONE))
 #define XLAT_STR_0 STRINGIFY(INET_DIAG_REQ_NONE)
 XLAT(INET_DIAG_REQ_BYTECODE),
 #define XLAT_VAL_1 ((unsigned) (INET_DIAG_REQ_BYTECODE))
 #define XLAT_STR_1 STRINGIFY(INET_DIAG_REQ_BYTECODE)
};
static
const struct xlat inet_diag_req_attrs[1] = { {
 .data = inet_diag_req_attrs_xdata,
 .size = ARRAY_SIZE(inet_diag_req_attrs_xdata),
 .type = XT_NORMAL,
 .flags_mask = 0
#  ifdef XLAT_VAL_0
  | XLAT_VAL_0
#  endif
#  ifdef XLAT_VAL_1
  | XLAT_VAL_1
#  endif
  ,
 .flags_strsz = 0
#  ifdef XLAT_STR_0
  + sizeof(XLAT_STR_0)
#  endif
#  ifdef XLAT_STR_1
  + sizeof(XLAT_STR_1)
#  endif
  ,
} };

#  undef XLAT_STR_0
#  undef XLAT_VAL_0
#  undef XLAT_STR_1
#  undef XLAT_VAL_1
# endif /* !IN_MPERS */

#endif /* !XLAT_MACROS_ONLY */
